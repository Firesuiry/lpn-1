use std::boxed::Box;
use std::default::Default;
use std::sync::Once;

use fnv::FnvHashMap;

use m4ri_rust::friendly::BinMatrix;
use m4ri_rust::friendly::BinVector;

use crate::codes::BinaryCode;

/// ``[15, 4]`` Guava code
///
/// Best code found from the GUAVA database version 3.15
///
/// Decodes using Syndrome decoding
#[derive(Clone, Serialize)]
pub struct GuavaCode15_4;

static INIT: Once = Once::new();
static mut GENERATOR_MATRIX: *const BinMatrix = 0 as *const BinMatrix;
static mut PARITY_MATRIX: *const BinMatrix = 0 as *const BinMatrix;
static mut PARITY_MATRIX_T: *const BinMatrix = 0 as *const BinMatrix;
static mut SYNDROME_MAP: *const FnvHashMap<u64, &'static [usize; 1]> = 0 as *const FnvHashMap<u64, &'static [usize; 1]>;

fn init() {
    INIT.call_once(|| {
        unsafe {
            let matrix = Box::new(BinMatrix::from_slices(&[
                &[ 21937 ],
                &[ 26322 ],
                &[ 30948 ],
                &[ 32520 ],
                
            ], 15));
            GENERATOR_MATRIX = Box::into_raw(matrix);

            let matrix = Box::new(BinMatrix::from_slices(&[
                &[ 24577 ],
                &[ 20482 ],
                &[ 17412 ],
                &[ 13320 ],
                &[ 12304 ],
                &[ 9248 ],
                &[ 5184 ],
                &[ 29824 ],
                &[ 21760 ],
                &[ 26112 ],
                &[ 30720 ],
                
            ], 15));
            let matrix_t = Box::new(matrix.transposed());
            PARITY_MATRIX = Box::into_raw(matrix);
            PARITY_MATRIX_T = Box::into_raw(matrix_t);

            let mut map = Box::new(FnvHashMap::with_capacity_and_hasher(2048, Default::default()));
            map.insert(0, &[0]);     // 0 => [0]
            map.insert(1, &[1]);     // 1 => [1]
            map.insert(2, &[2]);     // 2 => [2]
            map.insert(4, &[4]);     // 4 => [4]
            map.insert(8, &[8]);     // 8 => [8]
            map.insert(16, &[16]);     // 16 => [16]
            map.insert(32, &[32]);     // 32 => [32]
            map.insert(64, &[64]);     // 64 => [64]
            map.insert(128, &[128]);     // 128 => [128]
            map.insert(256, &[256]);     // 256 => [256]
            map.insert(512, &[512]);     // 512 => [512]
            map.insert(1004, &[1024]);     // 1004 => [1024]
            map.insert(1024, &[2048]);     // 1024 => [2048]
            map.insert(1498, &[4096]);     // 1498 => [4096]
            map.insert(1721, &[8192]);     // 1721 => [8192]
            map.insert(1927, &[16384]);     // 1927 => [16384]
            map.insert(3, &[3]);     // 3 => [3]
            map.insert(5, &[5]);     // 5 => [5]
            map.insert(9, &[9]);     // 9 => [9]
            map.insert(17, &[17]);     // 17 => [17]
            map.insert(33, &[33]);     // 33 => [33]
            map.insert(65, &[65]);     // 65 => [65]
            map.insert(129, &[129]);     // 129 => [129]
            map.insert(257, &[257]);     // 257 => [257]
            map.insert(513, &[513]);     // 513 => [513]
            map.insert(1005, &[1025]);     // 1005 => [1025]
            map.insert(1025, &[2049]);     // 1025 => [2049]
            map.insert(1499, &[4097]);     // 1499 => [4097]
            map.insert(1720, &[8193]);     // 1720 => [8193]
            map.insert(1926, &[16385]);     // 1926 => [16385]
            map.insert(6, &[6]);     // 6 => [6]
            map.insert(10, &[10]);     // 10 => [10]
            map.insert(18, &[18]);     // 18 => [18]
            map.insert(34, &[34]);     // 34 => [34]
            map.insert(66, &[66]);     // 66 => [66]
            map.insert(130, &[130]);     // 130 => [130]
            map.insert(258, &[258]);     // 258 => [258]
            map.insert(514, &[514]);     // 514 => [514]
            map.insert(1006, &[1026]);     // 1006 => [1026]
            map.insert(1026, &[2050]);     // 1026 => [2050]
            map.insert(1496, &[4098]);     // 1496 => [4098]
            map.insert(1723, &[8194]);     // 1723 => [8194]
            map.insert(1925, &[16386]);     // 1925 => [16386]
            map.insert(12, &[12]);     // 12 => [12]
            map.insert(20, &[20]);     // 20 => [20]
            map.insert(36, &[36]);     // 36 => [36]
            map.insert(68, &[68]);     // 68 => [68]
            map.insert(132, &[132]);     // 132 => [132]
            map.insert(260, &[260]);     // 260 => [260]
            map.insert(516, &[516]);     // 516 => [516]
            map.insert(1000, &[1028]);     // 1000 => [1028]
            map.insert(1028, &[2052]);     // 1028 => [2052]
            map.insert(1502, &[4100]);     // 1502 => [4100]
            map.insert(1725, &[8196]);     // 1725 => [8196]
            map.insert(1923, &[16388]);     // 1923 => [16388]
            map.insert(24, &[24]);     // 24 => [24]
            map.insert(40, &[40]);     // 40 => [40]
            map.insert(72, &[72]);     // 72 => [72]
            map.insert(136, &[136]);     // 136 => [136]
            map.insert(264, &[264]);     // 264 => [264]
            map.insert(520, &[520]);     // 520 => [520]
            map.insert(996, &[1032]);     // 996 => [1032]
            map.insert(1032, &[2056]);     // 1032 => [2056]
            map.insert(1490, &[4104]);     // 1490 => [4104]
            map.insert(1713, &[8200]);     // 1713 => [8200]
            map.insert(1935, &[16392]);     // 1935 => [16392]
            map.insert(48, &[48]);     // 48 => [48]
            map.insert(80, &[80]);     // 80 => [80]
            map.insert(144, &[144]);     // 144 => [144]
            map.insert(272, &[272]);     // 272 => [272]
            map.insert(528, &[528]);     // 528 => [528]
            map.insert(1020, &[1040]);     // 1020 => [1040]
            map.insert(1040, &[2064]);     // 1040 => [2064]
            map.insert(1482, &[4112]);     // 1482 => [4112]
            map.insert(1705, &[8208]);     // 1705 => [8208]
            map.insert(1943, &[16400]);     // 1943 => [16400]
            map.insert(96, &[96]);     // 96 => [96]
            map.insert(160, &[160]);     // 160 => [160]
            map.insert(288, &[288]);     // 288 => [288]
            map.insert(544, &[544]);     // 544 => [544]
            map.insert(972, &[1056]);     // 972 => [1056]
            map.insert(1056, &[2080]);     // 1056 => [2080]
            map.insert(1530, &[4128]);     // 1530 => [4128]
            map.insert(1689, &[8224]);     // 1689 => [8224]
            map.insert(1959, &[16416]);     // 1959 => [16416]
            map.insert(192, &[192]);     // 192 => [192]
            map.insert(320, &[320]);     // 320 => [320]
            map.insert(576, &[576]);     // 576 => [576]
            map.insert(940, &[1088]);     // 940 => [1088]
            map.insert(1088, &[2112]);     // 1088 => [2112]
            map.insert(1434, &[4160]);     // 1434 => [4160]
            map.insert(1785, &[8256]);     // 1785 => [8256]
            map.insert(1991, &[16448]);     // 1991 => [16448]
            map.insert(384, &[384]);     // 384 => [384]
            map.insert(640, &[640]);     // 640 => [640]
            map.insert(876, &[1152]);     // 876 => [1152]
            map.insert(1152, &[2176]);     // 1152 => [2176]
            map.insert(1370, &[4224]);     // 1370 => [4224]
            map.insert(1593, &[8320]);     // 1593 => [8320]
            map.insert(1799, &[16512]);     // 1799 => [16512]
            map.insert(768, &[768]);     // 768 => [768]
            map.insert(748, &[1280]);     // 748 => [1280]
            map.insert(1280, &[2304]);     // 1280 => [2304]
            map.insert(1242, &[4352]);     // 1242 => [4352]
            map.insert(1977, &[8448]);     // 1977 => [8448]
            map.insert(1671, &[16640]);     // 1671 => [16640]
            map.insert(492, &[1536]);     // 492 => [1536]
            map.insert(1536, &[2560]);     // 1536 => [2560]
            map.insert(2010, &[4608]);     // 2010 => [4608]
            map.insert(1209, &[8704]);     // 1209 => [8704]
            map.insert(1415, &[16896]);     // 1415 => [16896]
            map.insert(2028, &[3072]);     // 2028 => [3072]
            map.insert(1590, &[5120]);     // 1590 => [5120]
            map.insert(1365, &[9216]);     // 1365 => [9216]
            map.insert(1131, &[17408]);     // 1131 => [17408]
            map.insert(474, &[6144]);     // 474 => [6144]
            map.insert(697, &[10240]);     // 697 => [10240]
            map.insert(903, &[18432]);     // 903 => [18432]
            map.insert(867, &[12288]);     // 867 => [12288]
            map.insert(605, &[20480]);     // 605 => [20480]
            map.insert(318, &[24576]);     // 318 => [24576]
            map.insert(7, &[7]);     // 7 => [7]
            map.insert(11, &[11]);     // 11 => [11]
            map.insert(19, &[19]);     // 19 => [19]
            map.insert(35, &[35]);     // 35 => [35]
            map.insert(67, &[67]);     // 67 => [67]
            map.insert(131, &[131]);     // 131 => [131]
            map.insert(259, &[259]);     // 259 => [259]
            map.insert(515, &[515]);     // 515 => [515]
            map.insert(1007, &[1027]);     // 1007 => [1027]
            map.insert(1027, &[2051]);     // 1027 => [2051]
            map.insert(1497, &[4099]);     // 1497 => [4099]
            map.insert(1722, &[8195]);     // 1722 => [8195]
            map.insert(1924, &[16387]);     // 1924 => [16387]
            map.insert(13, &[13]);     // 13 => [13]
            map.insert(21, &[21]);     // 21 => [21]
            map.insert(37, &[37]);     // 37 => [37]
            map.insert(69, &[69]);     // 69 => [69]
            map.insert(133, &[133]);     // 133 => [133]
            map.insert(261, &[261]);     // 261 => [261]
            map.insert(517, &[517]);     // 517 => [517]
            map.insert(1001, &[1029]);     // 1001 => [1029]
            map.insert(1029, &[2053]);     // 1029 => [2053]
            map.insert(1503, &[4101]);     // 1503 => [4101]
            map.insert(1724, &[8197]);     // 1724 => [8197]
            map.insert(1922, &[16389]);     // 1922 => [16389]
            map.insert(25, &[25]);     // 25 => [25]
            map.insert(41, &[41]);     // 41 => [41]
            map.insert(73, &[73]);     // 73 => [73]
            map.insert(137, &[137]);     // 137 => [137]
            map.insert(265, &[265]);     // 265 => [265]
            map.insert(521, &[521]);     // 521 => [521]
            map.insert(997, &[1033]);     // 997 => [1033]
            map.insert(1033, &[2057]);     // 1033 => [2057]
            map.insert(1491, &[4105]);     // 1491 => [4105]
            map.insert(1712, &[8201]);     // 1712 => [8201]
            map.insert(1934, &[16393]);     // 1934 => [16393]
            map.insert(49, &[49]);     // 49 => [49]
            map.insert(81, &[81]);     // 81 => [81]
            map.insert(145, &[145]);     // 145 => [145]
            map.insert(273, &[273]);     // 273 => [273]
            map.insert(529, &[529]);     // 529 => [529]
            map.insert(1021, &[1041]);     // 1021 => [1041]
            map.insert(1041, &[2065]);     // 1041 => [2065]
            map.insert(1483, &[4113]);     // 1483 => [4113]
            map.insert(1704, &[8209]);     // 1704 => [8209]
            map.insert(1942, &[16401]);     // 1942 => [16401]
            map.insert(97, &[97]);     // 97 => [97]
            map.insert(161, &[161]);     // 161 => [161]
            map.insert(289, &[289]);     // 289 => [289]
            map.insert(545, &[545]);     // 545 => [545]
            map.insert(973, &[1057]);     // 973 => [1057]
            map.insert(1057, &[2081]);     // 1057 => [2081]
            map.insert(1531, &[4129]);     // 1531 => [4129]
            map.insert(1688, &[8225]);     // 1688 => [8225]
            map.insert(1958, &[16417]);     // 1958 => [16417]
            map.insert(193, &[193]);     // 193 => [193]
            map.insert(321, &[321]);     // 321 => [321]
            map.insert(577, &[577]);     // 577 => [577]
            map.insert(941, &[1089]);     // 941 => [1089]
            map.insert(1089, &[2113]);     // 1089 => [2113]
            map.insert(1435, &[4161]);     // 1435 => [4161]
            map.insert(1784, &[8257]);     // 1784 => [8257]
            map.insert(1990, &[16449]);     // 1990 => [16449]
            map.insert(385, &[385]);     // 385 => [385]
            map.insert(641, &[641]);     // 641 => [641]
            map.insert(877, &[1153]);     // 877 => [1153]
            map.insert(1153, &[2177]);     // 1153 => [2177]
            map.insert(1371, &[4225]);     // 1371 => [4225]
            map.insert(1592, &[8321]);     // 1592 => [8321]
            map.insert(1798, &[16513]);     // 1798 => [16513]
            map.insert(769, &[769]);     // 769 => [769]
            map.insert(749, &[1281]);     // 749 => [1281]
            map.insert(1281, &[2305]);     // 1281 => [2305]
            map.insert(1243, &[4353]);     // 1243 => [4353]
            map.insert(1976, &[8449]);     // 1976 => [8449]
            map.insert(1670, &[16641]);     // 1670 => [16641]
            map.insert(493, &[1537]);     // 493 => [1537]
            map.insert(1537, &[2561]);     // 1537 => [2561]
            map.insert(2011, &[4609]);     // 2011 => [4609]
            map.insert(1208, &[8705]);     // 1208 => [8705]
            map.insert(1414, &[16897]);     // 1414 => [16897]
            map.insert(2029, &[3073]);     // 2029 => [3073]
            map.insert(1591, &[5121]);     // 1591 => [5121]
            map.insert(1364, &[9217]);     // 1364 => [9217]
            map.insert(1130, &[17409]);     // 1130 => [17409]
            map.insert(475, &[6145]);     // 475 => [6145]
            map.insert(696, &[10241]);     // 696 => [10241]
            map.insert(902, &[18433]);     // 902 => [18433]
            map.insert(866, &[12289]);     // 866 => [12289]
            map.insert(604, &[20481]);     // 604 => [20481]
            map.insert(319, &[24577]);     // 319 => [24577]
            map.insert(14, &[14]);     // 14 => [14]
            map.insert(22, &[22]);     // 22 => [22]
            map.insert(38, &[38]);     // 38 => [38]
            map.insert(70, &[70]);     // 70 => [70]
            map.insert(134, &[134]);     // 134 => [134]
            map.insert(262, &[262]);     // 262 => [262]
            map.insert(518, &[518]);     // 518 => [518]
            map.insert(1002, &[1030]);     // 1002 => [1030]
            map.insert(1030, &[2054]);     // 1030 => [2054]
            map.insert(1500, &[4102]);     // 1500 => [4102]
            map.insert(1727, &[8198]);     // 1727 => [8198]
            map.insert(1921, &[16390]);     // 1921 => [16390]
            map.insert(26, &[26]);     // 26 => [26]
            map.insert(42, &[42]);     // 42 => [42]
            map.insert(74, &[74]);     // 74 => [74]
            map.insert(138, &[138]);     // 138 => [138]
            map.insert(266, &[266]);     // 266 => [266]
            map.insert(522, &[522]);     // 522 => [522]
            map.insert(998, &[1034]);     // 998 => [1034]
            map.insert(1034, &[2058]);     // 1034 => [2058]
            map.insert(1488, &[4106]);     // 1488 => [4106]
            map.insert(1715, &[8202]);     // 1715 => [8202]
            map.insert(1933, &[16394]);     // 1933 => [16394]
            map.insert(50, &[50]);     // 50 => [50]
            map.insert(82, &[82]);     // 82 => [82]
            map.insert(146, &[146]);     // 146 => [146]
            map.insert(274, &[274]);     // 274 => [274]
            map.insert(530, &[530]);     // 530 => [530]
            map.insert(1022, &[1042]);     // 1022 => [1042]
            map.insert(1042, &[2066]);     // 1042 => [2066]
            map.insert(1480, &[4114]);     // 1480 => [4114]
            map.insert(1707, &[8210]);     // 1707 => [8210]
            map.insert(1941, &[16402]);     // 1941 => [16402]
            map.insert(98, &[98]);     // 98 => [98]
            map.insert(162, &[162]);     // 162 => [162]
            map.insert(290, &[290]);     // 290 => [290]
            map.insert(546, &[546]);     // 546 => [546]
            map.insert(974, &[1058]);     // 974 => [1058]
            map.insert(1058, &[2082]);     // 1058 => [2082]
            map.insert(1528, &[4130]);     // 1528 => [4130]
            map.insert(1691, &[8226]);     // 1691 => [8226]
            map.insert(1957, &[16418]);     // 1957 => [16418]
            map.insert(194, &[194]);     // 194 => [194]
            map.insert(322, &[322]);     // 322 => [322]
            map.insert(578, &[578]);     // 578 => [578]
            map.insert(942, &[1090]);     // 942 => [1090]
            map.insert(1090, &[2114]);     // 1090 => [2114]
            map.insert(1432, &[4162]);     // 1432 => [4162]
            map.insert(1787, &[8258]);     // 1787 => [8258]
            map.insert(1989, &[16450]);     // 1989 => [16450]
            map.insert(386, &[386]);     // 386 => [386]
            map.insert(642, &[642]);     // 642 => [642]
            map.insert(878, &[1154]);     // 878 => [1154]
            map.insert(1154, &[2178]);     // 1154 => [2178]
            map.insert(1368, &[4226]);     // 1368 => [4226]
            map.insert(1595, &[8322]);     // 1595 => [8322]
            map.insert(1797, &[16514]);     // 1797 => [16514]
            map.insert(770, &[770]);     // 770 => [770]
            map.insert(750, &[1282]);     // 750 => [1282]
            map.insert(1282, &[2306]);     // 1282 => [2306]
            map.insert(1240, &[4354]);     // 1240 => [4354]
            map.insert(1979, &[8450]);     // 1979 => [8450]
            map.insert(1669, &[16642]);     // 1669 => [16642]
            map.insert(494, &[1538]);     // 494 => [1538]
            map.insert(1538, &[2562]);     // 1538 => [2562]
            map.insert(2008, &[4610]);     // 2008 => [4610]
            map.insert(1211, &[8706]);     // 1211 => [8706]
            map.insert(1413, &[16898]);     // 1413 => [16898]
            map.insert(2030, &[3074]);     // 2030 => [3074]
            map.insert(1588, &[5122]);     // 1588 => [5122]
            map.insert(1367, &[9218]);     // 1367 => [9218]
            map.insert(1129, &[17410]);     // 1129 => [17410]
            map.insert(472, &[6146]);     // 472 => [6146]
            map.insert(699, &[10242]);     // 699 => [10242]
            map.insert(901, &[18434]);     // 901 => [18434]
            map.insert(865, &[12290]);     // 865 => [12290]
            map.insert(607, &[20482]);     // 607 => [20482]
            map.insert(316, &[24578]);     // 316 => [24578]
            map.insert(28, &[28]);     // 28 => [28]
            map.insert(44, &[44]);     // 44 => [44]
            map.insert(76, &[76]);     // 76 => [76]
            map.insert(140, &[140]);     // 140 => [140]
            map.insert(268, &[268]);     // 268 => [268]
            map.insert(524, &[524]);     // 524 => [524]
            map.insert(992, &[1036]);     // 992 => [1036]
            map.insert(1036, &[2060]);     // 1036 => [2060]
            map.insert(1494, &[4108]);     // 1494 => [4108]
            map.insert(1717, &[8204]);     // 1717 => [8204]
            map.insert(1931, &[16396]);     // 1931 => [16396]
            map.insert(52, &[52]);     // 52 => [52]
            map.insert(84, &[84]);     // 84 => [84]
            map.insert(148, &[148]);     // 148 => [148]
            map.insert(276, &[276]);     // 276 => [276]
            map.insert(532, &[532]);     // 532 => [532]
            map.insert(1016, &[1044]);     // 1016 => [1044]
            map.insert(1044, &[2068]);     // 1044 => [2068]
            map.insert(1486, &[4116]);     // 1486 => [4116]
            map.insert(1709, &[8212]);     // 1709 => [8212]
            map.insert(1939, &[16404]);     // 1939 => [16404]
            map.insert(100, &[100]);     // 100 => [100]
            map.insert(164, &[164]);     // 164 => [164]
            map.insert(292, &[292]);     // 292 => [292]
            map.insert(548, &[548]);     // 548 => [548]
            map.insert(968, &[1060]);     // 968 => [1060]
            map.insert(1060, &[2084]);     // 1060 => [2084]
            map.insert(1534, &[4132]);     // 1534 => [4132]
            map.insert(1693, &[8228]);     // 1693 => [8228]
            map.insert(1955, &[16420]);     // 1955 => [16420]
            map.insert(196, &[196]);     // 196 => [196]
            map.insert(324, &[324]);     // 324 => [324]
            map.insert(580, &[580]);     // 580 => [580]
            map.insert(936, &[1092]);     // 936 => [1092]
            map.insert(1092, &[2116]);     // 1092 => [2116]
            map.insert(1438, &[4164]);     // 1438 => [4164]
            map.insert(1789, &[8260]);     // 1789 => [8260]
            map.insert(1987, &[16452]);     // 1987 => [16452]
            map.insert(388, &[388]);     // 388 => [388]
            map.insert(644, &[644]);     // 644 => [644]
            map.insert(872, &[1156]);     // 872 => [1156]
            map.insert(1156, &[2180]);     // 1156 => [2180]
            map.insert(1374, &[4228]);     // 1374 => [4228]
            map.insert(1597, &[8324]);     // 1597 => [8324]
            map.insert(1795, &[16516]);     // 1795 => [16516]
            map.insert(772, &[772]);     // 772 => [772]
            map.insert(744, &[1284]);     // 744 => [1284]
            map.insert(1284, &[2308]);     // 1284 => [2308]
            map.insert(1246, &[4356]);     // 1246 => [4356]
            map.insert(1981, &[8452]);     // 1981 => [8452]
            map.insert(1667, &[16644]);     // 1667 => [16644]
            map.insert(488, &[1540]);     // 488 => [1540]
            map.insert(1540, &[2564]);     // 1540 => [2564]
            map.insert(2014, &[4612]);     // 2014 => [4612]
            map.insert(1213, &[8708]);     // 1213 => [8708]
            map.insert(1411, &[16900]);     // 1411 => [16900]
            map.insert(2024, &[3076]);     // 2024 => [3076]
            map.insert(1586, &[5124]);     // 1586 => [5124]
            map.insert(1361, &[9220]);     // 1361 => [9220]
            map.insert(1135, &[17412]);     // 1135 => [17412]
            map.insert(478, &[6148]);     // 478 => [6148]
            map.insert(701, &[10244]);     // 701 => [10244]
            map.insert(899, &[18436]);     // 899 => [18436]
            map.insert(871, &[12292]);     // 871 => [12292]
            map.insert(601, &[20484]);     // 601 => [20484]
            map.insert(314, &[24580]);     // 314 => [24580]
            map.insert(56, &[56]);     // 56 => [56]
            map.insert(88, &[88]);     // 88 => [88]
            map.insert(152, &[152]);     // 152 => [152]
            map.insert(280, &[280]);     // 280 => [280]
            map.insert(536, &[536]);     // 536 => [536]
            map.insert(1012, &[1048]);     // 1012 => [1048]
            map.insert(1048, &[2072]);     // 1048 => [2072]
            map.insert(1474, &[4120]);     // 1474 => [4120]
            map.insert(1697, &[8216]);     // 1697 => [8216]
            map.insert(1951, &[16408]);     // 1951 => [16408]
            map.insert(104, &[104]);     // 104 => [104]
            map.insert(168, &[168]);     // 168 => [168]
            map.insert(296, &[296]);     // 296 => [296]
            map.insert(552, &[552]);     // 552 => [552]
            map.insert(964, &[1064]);     // 964 => [1064]
            map.insert(1064, &[2088]);     // 1064 => [2088]
            map.insert(1522, &[4136]);     // 1522 => [4136]
            map.insert(1681, &[8232]);     // 1681 => [8232]
            map.insert(1967, &[16424]);     // 1967 => [16424]
            map.insert(200, &[200]);     // 200 => [200]
            map.insert(328, &[328]);     // 328 => [328]
            map.insert(584, &[584]);     // 584 => [584]
            map.insert(932, &[1096]);     // 932 => [1096]
            map.insert(1096, &[2120]);     // 1096 => [2120]
            map.insert(1426, &[4168]);     // 1426 => [4168]
            map.insert(1777, &[8264]);     // 1777 => [8264]
            map.insert(1999, &[16456]);     // 1999 => [16456]
            map.insert(392, &[392]);     // 392 => [392]
            map.insert(648, &[648]);     // 648 => [648]
            map.insert(868, &[1160]);     // 868 => [1160]
            map.insert(1160, &[2184]);     // 1160 => [2184]
            map.insert(1362, &[4232]);     // 1362 => [4232]
            map.insert(1585, &[8328]);     // 1585 => [8328]
            map.insert(1807, &[16520]);     // 1807 => [16520]
            map.insert(776, &[776]);     // 776 => [776]
            map.insert(740, &[1288]);     // 740 => [1288]
            map.insert(1288, &[2312]);     // 1288 => [2312]
            map.insert(1234, &[4360]);     // 1234 => [4360]
            map.insert(1969, &[8456]);     // 1969 => [8456]
            map.insert(1679, &[16648]);     // 1679 => [16648]
            map.insert(484, &[1544]);     // 484 => [1544]
            map.insert(1544, &[2568]);     // 1544 => [2568]
            map.insert(2002, &[4616]);     // 2002 => [4616]
            map.insert(1201, &[8712]);     // 1201 => [8712]
            map.insert(1423, &[16904]);     // 1423 => [16904]
            map.insert(2020, &[3080]);     // 2020 => [3080]
            map.insert(1598, &[5128]);     // 1598 => [5128]
            map.insert(1373, &[9224]);     // 1373 => [9224]
            map.insert(1123, &[17416]);     // 1123 => [17416]
            map.insert(466, &[6152]);     // 466 => [6152]
            map.insert(689, &[10248]);     // 689 => [10248]
            map.insert(911, &[18440]);     // 911 => [18440]
            map.insert(875, &[12296]);     // 875 => [12296]
            map.insert(597, &[20488]);     // 597 => [20488]
            map.insert(310, &[24584]);     // 310 => [24584]
            map.insert(112, &[112]);     // 112 => [112]
            map.insert(176, &[176]);     // 176 => [176]
            map.insert(304, &[304]);     // 304 => [304]
            map.insert(560, &[560]);     // 560 => [560]
            map.insert(988, &[1072]);     // 988 => [1072]
            map.insert(1072, &[2096]);     // 1072 => [2096]
            map.insert(1514, &[4144]);     // 1514 => [4144]
            map.insert(1673, &[8240]);     // 1673 => [8240]
            map.insert(1975, &[16432]);     // 1975 => [16432]
            map.insert(208, &[208]);     // 208 => [208]
            map.insert(336, &[336]);     // 336 => [336]
            map.insert(592, &[592]);     // 592 => [592]
            map.insert(956, &[1104]);     // 956 => [1104]
            map.insert(1104, &[2128]);     // 1104 => [2128]
            map.insert(1418, &[4176]);     // 1418 => [4176]
            map.insert(1769, &[8272]);     // 1769 => [8272]
            map.insert(2007, &[16464]);     // 2007 => [16464]
            map.insert(400, &[400]);     // 400 => [400]
            map.insert(656, &[656]);     // 656 => [656]
            map.insert(892, &[1168]);     // 892 => [1168]
            map.insert(1168, &[2192]);     // 1168 => [2192]
            map.insert(1354, &[4240]);     // 1354 => [4240]
            map.insert(1577, &[8336]);     // 1577 => [8336]
            map.insert(1815, &[16528]);     // 1815 => [16528]
            map.insert(784, &[784]);     // 784 => [784]
            map.insert(764, &[1296]);     // 764 => [1296]
            map.insert(1296, &[2320]);     // 1296 => [2320]
            map.insert(1226, &[4368]);     // 1226 => [4368]
            map.insert(1961, &[8464]);     // 1961 => [8464]
            map.insert(1687, &[16656]);     // 1687 => [16656]
            map.insert(508, &[1552]);     // 508 => [1552]
            map.insert(1552, &[2576]);     // 1552 => [2576]
            map.insert(1994, &[4624]);     // 1994 => [4624]
            map.insert(1193, &[8720]);     // 1193 => [8720]
            map.insert(1431, &[16912]);     // 1431 => [16912]
            map.insert(2044, &[3088]);     // 2044 => [3088]
            map.insert(1574, &[5136]);     // 1574 => [5136]
            map.insert(1349, &[9232]);     // 1349 => [9232]
            map.insert(1147, &[17424]);     // 1147 => [17424]
            map.insert(458, &[6160]);     // 458 => [6160]
            map.insert(681, &[10256]);     // 681 => [10256]
            map.insert(919, &[18448]);     // 919 => [18448]
            map.insert(883, &[12304]);     // 883 => [12304]
            map.insert(589, &[20496]);     // 589 => [20496]
            map.insert(302, &[24592]);     // 302 => [24592]
            map.insert(224, &[224]);     // 224 => [224]
            map.insert(352, &[352]);     // 352 => [352]
            map.insert(608, &[608]);     // 608 => [608]
            map.insert(908, &[1120]);     // 908 => [1120]
            map.insert(1120, &[2144]);     // 1120 => [2144]
            map.insert(1466, &[4192]);     // 1466 => [4192]
            map.insert(1753, &[8288]);     // 1753 => [8288]
            map.insert(2023, &[16480]);     // 2023 => [16480]
            map.insert(416, &[416]);     // 416 => [416]
            map.insert(672, &[672]);     // 672 => [672]
            map.insert(844, &[1184]);     // 844 => [1184]
            map.insert(1184, &[2208]);     // 1184 => [2208]
            map.insert(1402, &[4256]);     // 1402 => [4256]
            map.insert(1561, &[8352]);     // 1561 => [8352]
            map.insert(1831, &[16544]);     // 1831 => [16544]
            map.insert(800, &[800]);     // 800 => [800]
            map.insert(716, &[1312]);     // 716 => [1312]
            map.insert(1312, &[2336]);     // 1312 => [2336]
            map.insert(1274, &[4384]);     // 1274 => [4384]
            map.insert(1945, &[8480]);     // 1945 => [8480]
            map.insert(1703, &[16672]);     // 1703 => [16672]
            map.insert(460, &[1568]);     // 460 => [1568]
            map.insert(1568, &[2592]);     // 1568 => [2592]
            map.insert(2042, &[4640]);     // 2042 => [4640]
            map.insert(1177, &[8736]);     // 1177 => [8736]
            map.insert(1447, &[16928]);     // 1447 => [16928]
            map.insert(1996, &[3104]);     // 1996 => [3104]
            map.insert(1558, &[5152]);     // 1558 => [5152]
            map.insert(1397, &[9248]);     // 1397 => [9248]
            map.insert(1099, &[17440]);     // 1099 => [17440]
            map.insert(506, &[6176]);     // 506 => [6176]
            map.insert(665, &[10272]);     // 665 => [10272]
            map.insert(935, &[18464]);     // 935 => [18464]
            map.insert(835, &[12320]);     // 835 => [12320]
            map.insert(637, &[20512]);     // 637 => [20512]
            map.insert(286, &[24608]);     // 286 => [24608]
            map.insert(448, &[448]);     // 448 => [448]
            map.insert(704, &[704]);     // 704 => [704]
            map.insert(812, &[1216]);     // 812 => [1216]
            map.insert(1216, &[2240]);     // 1216 => [2240]
            map.insert(1306, &[4288]);     // 1306 => [4288]
            map.insert(1657, &[8384]);     // 1657 => [8384]
            map.insert(1863, &[16576]);     // 1863 => [16576]
            map.insert(832, &[832]);     // 832 => [832]
            map.insert(684, &[1344]);     // 684 => [1344]
            map.insert(1344, &[2368]);     // 1344 => [2368]
            map.insert(1178, &[4416]);     // 1178 => [4416]
            map.insert(2041, &[8512]);     // 2041 => [8512]
            map.insert(1735, &[16704]);     // 1735 => [16704]
            map.insert(428, &[1600]);     // 428 => [1600]
            map.insert(1600, &[2624]);     // 1600 => [2624]
            map.insert(1946, &[4672]);     // 1946 => [4672]
            map.insert(1273, &[8768]);     // 1273 => [8768]
            map.insert(1479, &[16960]);     // 1479 => [16960]
            map.insert(1964, &[3136]);     // 1964 => [3136]
            map.insert(1654, &[5184]);     // 1654 => [5184]
            map.insert(1301, &[9280]);     // 1301 => [9280]
            map.insert(1067, &[17472]);     // 1067 => [17472]
            map.insert(410, &[6208]);     // 410 => [6208]
            map.insert(761, &[10304]);     // 761 => [10304]
            map.insert(967, &[18496]);     // 967 => [18496]
            map.insert(803, &[12352]);     // 803 => [12352]
            map.insert(541, &[20544]);     // 541 => [20544]
            map.insert(382, &[24640]);     // 382 => [24640]
            map.insert(896, &[896]);     // 896 => [896]
            map.insert(620, &[1408]);     // 620 => [1408]
            map.insert(1408, &[2432]);     // 1408 => [2432]
            map.insert(1114, &[4480]);     // 1114 => [4480]
            map.insert(1849, &[8576]);     // 1849 => [8576]
            map.insert(1543, &[16768]);     // 1543 => [16768]
            map.insert(364, &[1664]);     // 364 => [1664]
            map.insert(1664, &[2688]);     // 1664 => [2688]
            map.insert(1882, &[4736]);     // 1882 => [4736]
            map.insert(1081, &[8832]);     // 1081 => [8832]
            map.insert(1287, &[17024]);     // 1287 => [17024]
            map.insert(1900, &[3200]);     // 1900 => [3200]
            map.insert(1718, &[5248]);     // 1718 => [5248]
            map.insert(1493, &[9344]);     // 1493 => [9344]
            map.insert(1259, &[17536]);     // 1259 => [17536]
            map.insert(346, &[6272]);     // 346 => [6272]
            map.insert(569, &[10368]);     // 569 => [10368]
            map.insert(775, &[18560]);     // 775 => [18560]
            map.insert(995, &[12416]);     // 995 => [12416]
            map.insert(733, &[20608]);     // 733 => [20608]
            map.insert(446, &[24704]);     // 446 => [24704]
            map.insert(236, &[1792]);     // 236 => [1792]
            map.insert(1792, &[2816]);     // 1792 => [2816]
            map.insert(1754, &[4864]);     // 1754 => [4864]
            map.insert(1465, &[8960]);     // 1465 => [8960]
            map.insert(1159, &[17152]);     // 1159 => [17152]
            map.insert(1772, &[3328]);     // 1772 => [3328]
            map.insert(1846, &[5376]);     // 1846 => [5376]
            map.insert(1109, &[9472]);     // 1109 => [9472]
            map.insert(1387, &[17664]);     // 1387 => [17664]
            map.insert(218, &[6400]);     // 218 => [6400]
            map.insert(953, &[10496]);     // 953 => [10496]
            map.insert(647, &[18688]);     // 647 => [18688]
            map.insert(611, &[12544]);     // 611 => [12544]
            map.insert(861, &[20736]);     // 861 => [20736]
            map.insert(62, &[24832]);     // 62 => [24832]
            map.insert(1516, &[3584]);     // 1516 => [3584]
            map.insert(1078, &[5632]);     // 1078 => [5632]
            map.insert(1877, &[9728]);     // 1877 => [9728]
            map.insert(1643, &[17920]);     // 1643 => [17920]
            map.insert(986, &[6656]);     // 986 => [6656]
            map.insert(185, &[10752]);     // 185 => [10752]
            map.insert(391, &[18944]);     // 391 => [18944]
            map.insert(355, &[12800]);     // 355 => [12800]
            map.insert(93, &[20992]);     // 93 => [20992]
            map.insert(830, &[25088]);     // 830 => [25088]
            map.insert(566, &[7168]);     // 566 => [7168]
            map.insert(341, &[11264]);     // 341 => [11264]
            map.insert(107, &[19456]);     // 107 => [19456]
            map.insert(143, &[13312]);     // 143 => [13312]
            map.insert(433, &[21504]);     // 433 => [21504]
            map.insert(722, &[25600]);     // 722 => [25600]
            map.insert(1891, &[14336]);     // 1891 => [14336]
            map.insert(1629, &[22528]);     // 1629 => [22528]
            map.insert(1342, &[26624]);     // 1342 => [26624]
            map.insert(1252, &[28672]);     // 1252 => [28672]
            map.insert(15, &[15]);     // 15 => [15]
            map.insert(23, &[23]);     // 23 => [23]
            map.insert(39, &[39]);     // 39 => [39]
            map.insert(71, &[71]);     // 71 => [71]
            map.insert(135, &[135]);     // 135 => [135]
            map.insert(263, &[263]);     // 263 => [263]
            map.insert(519, &[519]);     // 519 => [519]
            map.insert(1003, &[1031]);     // 1003 => [1031]
            map.insert(1031, &[2055]);     // 1031 => [2055]
            map.insert(1501, &[4103]);     // 1501 => [4103]
            map.insert(1726, &[8199]);     // 1726 => [8199]
            map.insert(1920, &[16391]);     // 1920 => [16391]
            map.insert(27, &[27]);     // 27 => [27]
            map.insert(43, &[43]);     // 43 => [43]
            map.insert(75, &[75]);     // 75 => [75]
            map.insert(139, &[139]);     // 139 => [139]
            map.insert(267, &[267]);     // 267 => [267]
            map.insert(523, &[523]);     // 523 => [523]
            map.insert(999, &[1035]);     // 999 => [1035]
            map.insert(1035, &[2059]);     // 1035 => [2059]
            map.insert(1489, &[4107]);     // 1489 => [4107]
            map.insert(1714, &[8203]);     // 1714 => [8203]
            map.insert(1932, &[16395]);     // 1932 => [16395]
            map.insert(51, &[51]);     // 51 => [51]
            map.insert(83, &[83]);     // 83 => [83]
            map.insert(147, &[147]);     // 147 => [147]
            map.insert(275, &[275]);     // 275 => [275]
            map.insert(531, &[531]);     // 531 => [531]
            map.insert(1023, &[1043]);     // 1023 => [1043]
            map.insert(1043, &[2067]);     // 1043 => [2067]
            map.insert(1481, &[4115]);     // 1481 => [4115]
            map.insert(1706, &[8211]);     // 1706 => [8211]
            map.insert(1940, &[16403]);     // 1940 => [16403]
            map.insert(99, &[99]);     // 99 => [99]
            map.insert(163, &[163]);     // 163 => [163]
            map.insert(291, &[291]);     // 291 => [291]
            map.insert(547, &[547]);     // 547 => [547]
            map.insert(975, &[1059]);     // 975 => [1059]
            map.insert(1059, &[2083]);     // 1059 => [2083]
            map.insert(1529, &[4131]);     // 1529 => [4131]
            map.insert(1690, &[8227]);     // 1690 => [8227]
            map.insert(1956, &[16419]);     // 1956 => [16419]
            map.insert(195, &[195]);     // 195 => [195]
            map.insert(323, &[323]);     // 323 => [323]
            map.insert(579, &[579]);     // 579 => [579]
            map.insert(943, &[1091]);     // 943 => [1091]
            map.insert(1091, &[2115]);     // 1091 => [2115]
            map.insert(1433, &[4163]);     // 1433 => [4163]
            map.insert(1786, &[8259]);     // 1786 => [8259]
            map.insert(1988, &[16451]);     // 1988 => [16451]
            map.insert(387, &[387]);     // 387 => [387]
            map.insert(643, &[643]);     // 643 => [643]
            map.insert(879, &[1155]);     // 879 => [1155]
            map.insert(1155, &[2179]);     // 1155 => [2179]
            map.insert(1369, &[4227]);     // 1369 => [4227]
            map.insert(1594, &[8323]);     // 1594 => [8323]
            map.insert(1796, &[16515]);     // 1796 => [16515]
            map.insert(771, &[771]);     // 771 => [771]
            map.insert(751, &[1283]);     // 751 => [1283]
            map.insert(1283, &[2307]);     // 1283 => [2307]
            map.insert(1241, &[4355]);     // 1241 => [4355]
            map.insert(1978, &[8451]);     // 1978 => [8451]
            map.insert(1668, &[16643]);     // 1668 => [16643]
            map.insert(495, &[1539]);     // 495 => [1539]
            map.insert(1539, &[2563]);     // 1539 => [2563]
            map.insert(2009, &[4611]);     // 2009 => [4611]
            map.insert(1210, &[8707]);     // 1210 => [8707]
            map.insert(1412, &[16899]);     // 1412 => [16899]
            map.insert(2031, &[3075]);     // 2031 => [3075]
            map.insert(1589, &[5123]);     // 1589 => [5123]
            map.insert(1366, &[9219]);     // 1366 => [9219]
            map.insert(1128, &[17411]);     // 1128 => [17411]
            map.insert(473, &[6147]);     // 473 => [6147]
            map.insert(698, &[10243]);     // 698 => [10243]
            map.insert(900, &[18435]);     // 900 => [18435]
            map.insert(864, &[12291]);     // 864 => [12291]
            map.insert(606, &[20483]);     // 606 => [20483]
            map.insert(317, &[24579]);     // 317 => [24579]
            map.insert(29, &[29]);     // 29 => [29]
            map.insert(45, &[45]);     // 45 => [45]
            map.insert(77, &[77]);     // 77 => [77]
            map.insert(141, &[141]);     // 141 => [141]
            map.insert(269, &[269]);     // 269 => [269]
            map.insert(525, &[525]);     // 525 => [525]
            map.insert(993, &[1037]);     // 993 => [1037]
            map.insert(1037, &[2061]);     // 1037 => [2061]
            map.insert(1495, &[4109]);     // 1495 => [4109]
            map.insert(1716, &[8205]);     // 1716 => [8205]
            map.insert(1930, &[16397]);     // 1930 => [16397]
            map.insert(53, &[53]);     // 53 => [53]
            map.insert(85, &[85]);     // 85 => [85]
            map.insert(149, &[149]);     // 149 => [149]
            map.insert(277, &[277]);     // 277 => [277]
            map.insert(533, &[533]);     // 533 => [533]
            map.insert(1017, &[1045]);     // 1017 => [1045]
            map.insert(1045, &[2069]);     // 1045 => [2069]
            map.insert(1487, &[4117]);     // 1487 => [4117]
            map.insert(1708, &[8213]);     // 1708 => [8213]
            map.insert(1938, &[16405]);     // 1938 => [16405]
            map.insert(101, &[101]);     // 101 => [101]
            map.insert(165, &[165]);     // 165 => [165]
            map.insert(293, &[293]);     // 293 => [293]
            map.insert(549, &[549]);     // 549 => [549]
            map.insert(969, &[1061]);     // 969 => [1061]
            map.insert(1061, &[2085]);     // 1061 => [2085]
            map.insert(1535, &[4133]);     // 1535 => [4133]
            map.insert(1692, &[8229]);     // 1692 => [8229]
            map.insert(1954, &[16421]);     // 1954 => [16421]
            map.insert(197, &[197]);     // 197 => [197]
            map.insert(325, &[325]);     // 325 => [325]
            map.insert(581, &[581]);     // 581 => [581]
            map.insert(937, &[1093]);     // 937 => [1093]
            map.insert(1093, &[2117]);     // 1093 => [2117]
            map.insert(1439, &[4165]);     // 1439 => [4165]
            map.insert(1788, &[8261]);     // 1788 => [8261]
            map.insert(1986, &[16453]);     // 1986 => [16453]
            map.insert(389, &[389]);     // 389 => [389]
            map.insert(645, &[645]);     // 645 => [645]
            map.insert(873, &[1157]);     // 873 => [1157]
            map.insert(1157, &[2181]);     // 1157 => [2181]
            map.insert(1375, &[4229]);     // 1375 => [4229]
            map.insert(1596, &[8325]);     // 1596 => [8325]
            map.insert(1794, &[16517]);     // 1794 => [16517]
            map.insert(773, &[773]);     // 773 => [773]
            map.insert(745, &[1285]);     // 745 => [1285]
            map.insert(1285, &[2309]);     // 1285 => [2309]
            map.insert(1247, &[4357]);     // 1247 => [4357]
            map.insert(1980, &[8453]);     // 1980 => [8453]
            map.insert(1666, &[16645]);     // 1666 => [16645]
            map.insert(489, &[1541]);     // 489 => [1541]
            map.insert(1541, &[2565]);     // 1541 => [2565]
            map.insert(2015, &[4613]);     // 2015 => [4613]
            map.insert(1212, &[8709]);     // 1212 => [8709]
            map.insert(1410, &[16901]);     // 1410 => [16901]
            map.insert(2025, &[3077]);     // 2025 => [3077]
            map.insert(1587, &[5125]);     // 1587 => [5125]
            map.insert(1360, &[9221]);     // 1360 => [9221]
            map.insert(1134, &[17413]);     // 1134 => [17413]
            map.insert(479, &[6149]);     // 479 => [6149]
            map.insert(700, &[10245]);     // 700 => [10245]
            map.insert(898, &[18437]);     // 898 => [18437]
            map.insert(870, &[12293]);     // 870 => [12293]
            map.insert(600, &[20485]);     // 600 => [20485]
            map.insert(315, &[24581]);     // 315 => [24581]
            map.insert(57, &[57]);     // 57 => [57]
            map.insert(89, &[89]);     // 89 => [89]
            map.insert(153, &[153]);     // 153 => [153]
            map.insert(281, &[281]);     // 281 => [281]
            map.insert(537, &[537]);     // 537 => [537]
            map.insert(1013, &[1049]);     // 1013 => [1049]
            map.insert(1049, &[2073]);     // 1049 => [2073]
            map.insert(1475, &[4121]);     // 1475 => [4121]
            map.insert(1696, &[8217]);     // 1696 => [8217]
            map.insert(1950, &[16409]);     // 1950 => [16409]
            map.insert(105, &[105]);     // 105 => [105]
            map.insert(169, &[169]);     // 169 => [169]
            map.insert(297, &[297]);     // 297 => [297]
            map.insert(553, &[553]);     // 553 => [553]
            map.insert(965, &[1065]);     // 965 => [1065]
            map.insert(1065, &[2089]);     // 1065 => [2089]
            map.insert(1523, &[4137]);     // 1523 => [4137]
            map.insert(1680, &[8233]);     // 1680 => [8233]
            map.insert(1966, &[16425]);     // 1966 => [16425]
            map.insert(201, &[201]);     // 201 => [201]
            map.insert(329, &[329]);     // 329 => [329]
            map.insert(585, &[585]);     // 585 => [585]
            map.insert(933, &[1097]);     // 933 => [1097]
            map.insert(1097, &[2121]);     // 1097 => [2121]
            map.insert(1427, &[4169]);     // 1427 => [4169]
            map.insert(1776, &[8265]);     // 1776 => [8265]
            map.insert(1998, &[16457]);     // 1998 => [16457]
            map.insert(393, &[393]);     // 393 => [393]
            map.insert(649, &[649]);     // 649 => [649]
            map.insert(869, &[1161]);     // 869 => [1161]
            map.insert(1161, &[2185]);     // 1161 => [2185]
            map.insert(1363, &[4233]);     // 1363 => [4233]
            map.insert(1584, &[8329]);     // 1584 => [8329]
            map.insert(1806, &[16521]);     // 1806 => [16521]
            map.insert(777, &[777]);     // 777 => [777]
            map.insert(741, &[1289]);     // 741 => [1289]
            map.insert(1289, &[2313]);     // 1289 => [2313]
            map.insert(1235, &[4361]);     // 1235 => [4361]
            map.insert(1968, &[8457]);     // 1968 => [8457]
            map.insert(1678, &[16649]);     // 1678 => [16649]
            map.insert(485, &[1545]);     // 485 => [1545]
            map.insert(1545, &[2569]);     // 1545 => [2569]
            map.insert(2003, &[4617]);     // 2003 => [4617]
            map.insert(1200, &[8713]);     // 1200 => [8713]
            map.insert(1422, &[16905]);     // 1422 => [16905]
            map.insert(2021, &[3081]);     // 2021 => [3081]
            map.insert(1599, &[5129]);     // 1599 => [5129]
            map.insert(1372, &[9225]);     // 1372 => [9225]
            map.insert(1122, &[17417]);     // 1122 => [17417]
            map.insert(467, &[6153]);     // 467 => [6153]
            map.insert(688, &[10249]);     // 688 => [10249]
            map.insert(910, &[18441]);     // 910 => [18441]
            map.insert(874, &[12297]);     // 874 => [12297]
            map.insert(596, &[20489]);     // 596 => [20489]
            map.insert(311, &[24585]);     // 311 => [24585]
            map.insert(113, &[113]);     // 113 => [113]
            map.insert(177, &[177]);     // 177 => [177]
            map.insert(305, &[305]);     // 305 => [305]
            map.insert(561, &[561]);     // 561 => [561]
            map.insert(989, &[1073]);     // 989 => [1073]
            map.insert(1073, &[2097]);     // 1073 => [2097]
            map.insert(1515, &[4145]);     // 1515 => [4145]
            map.insert(1672, &[8241]);     // 1672 => [8241]
            map.insert(1974, &[16433]);     // 1974 => [16433]
            map.insert(209, &[209]);     // 209 => [209]
            map.insert(337, &[337]);     // 337 => [337]
            map.insert(593, &[593]);     // 593 => [593]
            map.insert(957, &[1105]);     // 957 => [1105]
            map.insert(1105, &[2129]);     // 1105 => [2129]
            map.insert(1419, &[4177]);     // 1419 => [4177]
            map.insert(1768, &[8273]);     // 1768 => [8273]
            map.insert(2006, &[16465]);     // 2006 => [16465]
            map.insert(401, &[401]);     // 401 => [401]
            map.insert(657, &[657]);     // 657 => [657]
            map.insert(893, &[1169]);     // 893 => [1169]
            map.insert(1169, &[2193]);     // 1169 => [2193]
            map.insert(1355, &[4241]);     // 1355 => [4241]
            map.insert(1576, &[8337]);     // 1576 => [8337]
            map.insert(1814, &[16529]);     // 1814 => [16529]
            map.insert(785, &[785]);     // 785 => [785]
            map.insert(765, &[1297]);     // 765 => [1297]
            map.insert(1297, &[2321]);     // 1297 => [2321]
            map.insert(1227, &[4369]);     // 1227 => [4369]
            map.insert(1960, &[8465]);     // 1960 => [8465]
            map.insert(1686, &[16657]);     // 1686 => [16657]
            map.insert(509, &[1553]);     // 509 => [1553]
            map.insert(1553, &[2577]);     // 1553 => [2577]
            map.insert(1995, &[4625]);     // 1995 => [4625]
            map.insert(1192, &[8721]);     // 1192 => [8721]
            map.insert(1430, &[16913]);     // 1430 => [16913]
            map.insert(2045, &[3089]);     // 2045 => [3089]
            map.insert(1575, &[5137]);     // 1575 => [5137]
            map.insert(1348, &[9233]);     // 1348 => [9233]
            map.insert(1146, &[17425]);     // 1146 => [17425]
            map.insert(459, &[6161]);     // 459 => [6161]
            map.insert(680, &[10257]);     // 680 => [10257]
            map.insert(918, &[18449]);     // 918 => [18449]
            map.insert(882, &[12305]);     // 882 => [12305]
            map.insert(588, &[20497]);     // 588 => [20497]
            map.insert(303, &[24593]);     // 303 => [24593]
            map.insert(225, &[225]);     // 225 => [225]
            map.insert(353, &[353]);     // 353 => [353]
            map.insert(609, &[609]);     // 609 => [609]
            map.insert(909, &[1121]);     // 909 => [1121]
            map.insert(1121, &[2145]);     // 1121 => [2145]
            map.insert(1467, &[4193]);     // 1467 => [4193]
            map.insert(1752, &[8289]);     // 1752 => [8289]
            map.insert(2022, &[16481]);     // 2022 => [16481]
            map.insert(417, &[417]);     // 417 => [417]
            map.insert(673, &[673]);     // 673 => [673]
            map.insert(845, &[1185]);     // 845 => [1185]
            map.insert(1185, &[2209]);     // 1185 => [2209]
            map.insert(1403, &[4257]);     // 1403 => [4257]
            map.insert(1560, &[8353]);     // 1560 => [8353]
            map.insert(1830, &[16545]);     // 1830 => [16545]
            map.insert(801, &[801]);     // 801 => [801]
            map.insert(717, &[1313]);     // 717 => [1313]
            map.insert(1313, &[2337]);     // 1313 => [2337]
            map.insert(1275, &[4385]);     // 1275 => [4385]
            map.insert(1944, &[8481]);     // 1944 => [8481]
            map.insert(1702, &[16673]);     // 1702 => [16673]
            map.insert(461, &[1569]);     // 461 => [1569]
            map.insert(1569, &[2593]);     // 1569 => [2593]
            map.insert(2043, &[4641]);     // 2043 => [4641]
            map.insert(1176, &[8737]);     // 1176 => [8737]
            map.insert(1446, &[16929]);     // 1446 => [16929]
            map.insert(1997, &[3105]);     // 1997 => [3105]
            map.insert(1559, &[5153]);     // 1559 => [5153]
            map.insert(1396, &[9249]);     // 1396 => [9249]
            map.insert(1098, &[17441]);     // 1098 => [17441]
            map.insert(507, &[6177]);     // 507 => [6177]
            map.insert(664, &[10273]);     // 664 => [10273]
            map.insert(934, &[18465]);     // 934 => [18465]
            map.insert(834, &[12321]);     // 834 => [12321]
            map.insert(636, &[20513]);     // 636 => [20513]
            map.insert(287, &[24609]);     // 287 => [24609]
            map.insert(449, &[449]);     // 449 => [449]
            map.insert(705, &[705]);     // 705 => [705]
            map.insert(813, &[1217]);     // 813 => [1217]
            map.insert(1217, &[2241]);     // 1217 => [2241]
            map.insert(1307, &[4289]);     // 1307 => [4289]
            map.insert(1656, &[8385]);     // 1656 => [8385]
            map.insert(1862, &[16577]);     // 1862 => [16577]
            map.insert(833, &[833]);     // 833 => [833]
            map.insert(685, &[1345]);     // 685 => [1345]
            map.insert(1345, &[2369]);     // 1345 => [2369]
            map.insert(1179, &[4417]);     // 1179 => [4417]
            map.insert(2040, &[8513]);     // 2040 => [8513]
            map.insert(1734, &[16705]);     // 1734 => [16705]
            map.insert(429, &[1601]);     // 429 => [1601]
            map.insert(1601, &[2625]);     // 1601 => [2625]
            map.insert(1947, &[4673]);     // 1947 => [4673]
            map.insert(1272, &[8769]);     // 1272 => [8769]
            map.insert(1478, &[16961]);     // 1478 => [16961]
            map.insert(1965, &[3137]);     // 1965 => [3137]
            map.insert(1655, &[5185]);     // 1655 => [5185]
            map.insert(1300, &[9281]);     // 1300 => [9281]
            map.insert(1066, &[17473]);     // 1066 => [17473]
            map.insert(411, &[6209]);     // 411 => [6209]
            map.insert(760, &[10305]);     // 760 => [10305]
            map.insert(966, &[18497]);     // 966 => [18497]
            map.insert(802, &[12353]);     // 802 => [12353]
            map.insert(540, &[20545]);     // 540 => [20545]
            map.insert(383, &[24641]);     // 383 => [24641]
            map.insert(897, &[897]);     // 897 => [897]
            map.insert(621, &[1409]);     // 621 => [1409]
            map.insert(1409, &[2433]);     // 1409 => [2433]
            map.insert(1115, &[4481]);     // 1115 => [4481]
            map.insert(1848, &[8577]);     // 1848 => [8577]
            map.insert(1542, &[16769]);     // 1542 => [16769]
            map.insert(365, &[1665]);     // 365 => [1665]
            map.insert(1665, &[2689]);     // 1665 => [2689]
            map.insert(1883, &[4737]);     // 1883 => [4737]
            map.insert(1080, &[8833]);     // 1080 => [8833]
            map.insert(1286, &[17025]);     // 1286 => [17025]
            map.insert(1901, &[3201]);     // 1901 => [3201]
            map.insert(1719, &[5249]);     // 1719 => [5249]
            map.insert(1492, &[9345]);     // 1492 => [9345]
            map.insert(1258, &[17537]);     // 1258 => [17537]
            map.insert(347, &[6273]);     // 347 => [6273]
            map.insert(568, &[10369]);     // 568 => [10369]
            map.insert(774, &[18561]);     // 774 => [18561]
            map.insert(994, &[12417]);     // 994 => [12417]
            map.insert(732, &[20609]);     // 732 => [20609]
            map.insert(447, &[24705]);     // 447 => [24705]
            map.insert(237, &[1793]);     // 237 => [1793]
            map.insert(1793, &[2817]);     // 1793 => [2817]
            map.insert(1755, &[4865]);     // 1755 => [4865]
            map.insert(1464, &[8961]);     // 1464 => [8961]
            map.insert(1158, &[17153]);     // 1158 => [17153]
            map.insert(1773, &[3329]);     // 1773 => [3329]
            map.insert(1847, &[5377]);     // 1847 => [5377]
            map.insert(1108, &[9473]);     // 1108 => [9473]
            map.insert(1386, &[17665]);     // 1386 => [17665]
            map.insert(219, &[6401]);     // 219 => [6401]
            map.insert(952, &[10497]);     // 952 => [10497]
            map.insert(646, &[18689]);     // 646 => [18689]
            map.insert(610, &[12545]);     // 610 => [12545]
            map.insert(860, &[20737]);     // 860 => [20737]
            map.insert(63, &[24833]);     // 63 => [24833]
            map.insert(1517, &[3585]);     // 1517 => [3585]
            map.insert(1079, &[5633]);     // 1079 => [5633]
            map.insert(1876, &[9729]);     // 1876 => [9729]
            map.insert(1642, &[17921]);     // 1642 => [17921]
            map.insert(987, &[6657]);     // 987 => [6657]
            map.insert(184, &[10753]);     // 184 => [10753]
            map.insert(390, &[18945]);     // 390 => [18945]
            map.insert(354, &[12801]);     // 354 => [12801]
            map.insert(92, &[20993]);     // 92 => [20993]
            map.insert(831, &[25089]);     // 831 => [25089]
            map.insert(567, &[7169]);     // 567 => [7169]
            map.insert(340, &[11265]);     // 340 => [11265]
            map.insert(106, &[19457]);     // 106 => [19457]
            map.insert(142, &[13313]);     // 142 => [13313]
            map.insert(432, &[21505]);     // 432 => [21505]
            map.insert(723, &[25601]);     // 723 => [25601]
            map.insert(1890, &[14337]);     // 1890 => [14337]
            map.insert(1628, &[22529]);     // 1628 => [22529]
            map.insert(1343, &[26625]);     // 1343 => [26625]
            map.insert(1253, &[28673]);     // 1253 => [28673]
            map.insert(30, &[30]);     // 30 => [30]
            map.insert(46, &[46]);     // 46 => [46]
            map.insert(78, &[78]);     // 78 => [78]
            map.insert(270, &[270]);     // 270 => [270]
            map.insert(526, &[526]);     // 526 => [526]
            map.insert(1038, &[2062]);     // 1038 => [2062]
            map.insert(1929, &[16398]);     // 1929 => [16398]
            map.insert(54, &[54]);     // 54 => [54]
            map.insert(86, &[86]);     // 86 => [86]
            map.insert(150, &[150]);     // 150 => [150]
            map.insert(278, &[278]);     // 278 => [278]
            map.insert(534, &[534]);     // 534 => [534]
            map.insert(1018, &[1046]);     // 1018 => [1046]
            map.insert(1046, &[2070]);     // 1046 => [2070]
            map.insert(1484, &[4118]);     // 1484 => [4118]
            map.insert(1711, &[8214]);     // 1711 => [8214]
            map.insert(1937, &[16406]);     // 1937 => [16406]
            map.insert(102, &[102]);     // 102 => [102]
            map.insert(166, &[166]);     // 166 => [166]
            map.insert(294, &[294]);     // 294 => [294]
            map.insert(550, &[550]);     // 550 => [550]
            map.insert(970, &[1062]);     // 970 => [1062]
            map.insert(1062, &[2086]);     // 1062 => [2086]
            map.insert(1532, &[4134]);     // 1532 => [4134]
            map.insert(1695, &[8230]);     // 1695 => [8230]
            map.insert(1953, &[16422]);     // 1953 => [16422]
            map.insert(198, &[198]);     // 198 => [198]
            map.insert(326, &[326]);     // 326 => [326]
            map.insert(582, &[582]);     // 582 => [582]
            map.insert(938, &[1094]);     // 938 => [1094]
            map.insert(1094, &[2118]);     // 1094 => [2118]
            map.insert(1436, &[4166]);     // 1436 => [4166]
            map.insert(1791, &[8262]);     // 1791 => [8262]
            map.insert(1985, &[16454]);     // 1985 => [16454]
            map.insert(746, &[1286]);     // 746 => [1286]
            map.insert(1244, &[4358]);     // 1244 => [4358]
            map.insert(1983, &[8454]);     // 1983 => [8454]
            map.insert(490, &[1542]);     // 490 => [1542]
            map.insert(2012, &[4614]);     // 2012 => [4614]
            map.insert(1215, &[8710]);     // 1215 => [8710]
            map.insert(2026, &[3078]);     // 2026 => [3078]
            map.insert(1133, &[17414]);     // 1133 => [17414]
            map.insert(476, &[6150]);     // 476 => [6150]
            map.insert(703, &[10246]);     // 703 => [10246]
            map.insert(603, &[20486]);     // 603 => [20486]
            map.insert(312, &[24582]);     // 312 => [24582]
            map.insert(58, &[58]);     // 58 => [58]
            map.insert(90, &[90]);     // 90 => [90]
            map.insert(154, &[154]);     // 154 => [154]
            map.insert(282, &[282]);     // 282 => [282]
            map.insert(538, &[538]);     // 538 => [538]
            map.insert(1014, &[1050]);     // 1014 => [1050]
            map.insert(1050, &[2074]);     // 1050 => [2074]
            map.insert(1472, &[4122]);     // 1472 => [4122]
            map.insert(1699, &[8218]);     // 1699 => [8218]
            map.insert(1949, &[16410]);     // 1949 => [16410]
            map.insert(170, &[170]);     // 170 => [170]
            map.insert(298, &[298]);     // 298 => [298]
            map.insert(554, &[554]);     // 554 => [554]
            map.insert(1520, &[4138]);     // 1520 => [4138]
            map.insert(1683, &[8234]);     // 1683 => [8234]
            map.insert(202, &[202]);     // 202 => [202]
            map.insert(330, &[330]);     // 330 => [330]
            map.insert(586, &[586]);     // 586 => [586]
            map.insert(1424, &[4170]);     // 1424 => [4170]
            map.insert(1779, &[8266]);     // 1779 => [8266]
            map.insert(394, &[394]);     // 394 => [394]
            map.insert(650, &[650]);     // 650 => [650]
            map.insert(1162, &[2186]);     // 1162 => [2186]
            map.insert(1805, &[16522]);     // 1805 => [16522]
            map.insert(778, &[778]);     // 778 => [778]
            map.insert(742, &[1290]);     // 742 => [1290]
            map.insert(1290, &[2314]);     // 1290 => [2314]
            map.insert(1232, &[4362]);     // 1232 => [4362]
            map.insert(1971, &[8458]);     // 1971 => [8458]
            map.insert(1677, &[16650]);     // 1677 => [16650]
            map.insert(486, &[1546]);     // 486 => [1546]
            map.insert(1546, &[2570]);     // 1546 => [2570]
            map.insert(2000, &[4618]);     // 2000 => [4618]
            map.insert(1203, &[8714]);     // 1203 => [8714]
            map.insert(1421, &[16906]);     // 1421 => [16906]
            map.insert(464, &[6154]);     // 464 => [6154]
            map.insert(691, &[10250]);     // 691 => [10250]
            map.insert(599, &[20490]);     // 599 => [20490]
            map.insert(308, &[24586]);     // 308 => [24586]
            map.insert(114, &[114]);     // 114 => [114]
            map.insert(178, &[178]);     // 178 => [178]
            map.insert(306, &[306]);     // 306 => [306]
            map.insert(562, &[562]);     // 562 => [562]
            map.insert(990, &[1074]);     // 990 => [1074]
            map.insert(1074, &[2098]);     // 1074 => [2098]
            map.insert(1512, &[4146]);     // 1512 => [4146]
            map.insert(1675, &[8242]);     // 1675 => [8242]
            map.insert(1973, &[16434]);     // 1973 => [16434]
            map.insert(210, &[210]);     // 210 => [210]
            map.insert(338, &[338]);     // 338 => [338]
            map.insert(594, &[594]);     // 594 => [594]
            map.insert(958, &[1106]);     // 958 => [1106]
            map.insert(1106, &[2130]);     // 1106 => [2130]
            map.insert(1416, &[4178]);     // 1416 => [4178]
            map.insert(1771, &[8274]);     // 1771 => [8274]
            map.insert(2005, &[16466]);     // 2005 => [16466]
            map.insert(402, &[402]);     // 402 => [402]
            map.insert(658, &[658]);     // 658 => [658]
            map.insert(894, &[1170]);     // 894 => [1170]
            map.insert(1170, &[2194]);     // 1170 => [2194]
            map.insert(1352, &[4242]);     // 1352 => [4242]
            map.insert(1579, &[8338]);     // 1579 => [8338]
            map.insert(1813, &[16530]);     // 1813 => [16530]
            map.insert(786, &[786]);     // 786 => [786]
            map.insert(766, &[1298]);     // 766 => [1298]
            map.insert(1298, &[2322]);     // 1298 => [2322]
            map.insert(1224, &[4370]);     // 1224 => [4370]
            map.insert(1963, &[8466]);     // 1963 => [8466]
            map.insert(1685, &[16658]);     // 1685 => [16658]
            map.insert(510, &[1554]);     // 510 => [1554]
            map.insert(1554, &[2578]);     // 1554 => [2578]
            map.insert(1992, &[4626]);     // 1992 => [4626]
            map.insert(1195, &[8722]);     // 1195 => [8722]
            map.insert(1429, &[16914]);     // 1429 => [16914]
            map.insert(2046, &[3090]);     // 2046 => [3090]
            map.insert(1572, &[5138]);     // 1572 => [5138]
            map.insert(1351, &[9234]);     // 1351 => [9234]
            map.insert(1145, &[17426]);     // 1145 => [17426]
            map.insert(456, &[6162]);     // 456 => [6162]
            map.insert(683, &[10258]);     // 683 => [10258]
            map.insert(917, &[18450]);     // 917 => [18450]
            map.insert(881, &[12306]);     // 881 => [12306]
            map.insert(591, &[20498]);     // 591 => [20498]
            map.insert(300, &[24594]);     // 300 => [24594]
            map.insert(226, &[226]);     // 226 => [226]
            map.insert(418, &[418]);     // 418 => [418]
            map.insert(674, &[674]);     // 674 => [674]
            map.insert(846, &[1186]);     // 846 => [1186]
            map.insert(1186, &[2210]);     // 1186 => [2210]
            map.insert(1400, &[4258]);     // 1400 => [4258]
            map.insert(1563, &[8354]);     // 1563 => [8354]
            map.insert(1829, &[16546]);     // 1829 => [16546]
            map.insert(718, &[1314]);     // 718 => [1314]
            map.insert(1314, &[2338]);     // 1314 => [2338]
            map.insert(1701, &[16674]);     // 1701 => [16674]
            map.insert(462, &[1570]);     // 462 => [1570]
            map.insert(1570, &[2594]);     // 1570 => [2594]
            map.insert(1445, &[16930]);     // 1445 => [16930]
            map.insert(1556, &[5154]);     // 1556 => [5154]
            map.insert(1399, &[9250]);     // 1399 => [9250]
            map.insert(504, &[6178]);     // 504 => [6178]
            map.insert(667, &[10274]);     // 667 => [10274]
            map.insert(639, &[20514]);     // 639 => [20514]
            map.insert(284, &[24610]);     // 284 => [24610]
            map.insert(450, &[450]);     // 450 => [450]
            map.insert(706, &[706]);     // 706 => [706]
            map.insert(814, &[1218]);     // 814 => [1218]
            map.insert(1218, &[2242]);     // 1218 => [2242]
            map.insert(1304, &[4290]);     // 1304 => [4290]
            map.insert(1659, &[8386]);     // 1659 => [8386]
            map.insert(1861, &[16578]);     // 1861 => [16578]
            map.insert(686, &[1346]);     // 686 => [1346]
            map.insert(1346, &[2370]);     // 1346 => [2370]
            map.insert(1733, &[16706]);     // 1733 => [16706]
            map.insert(430, &[1602]);     // 430 => [1602]
            map.insert(1602, &[2626]);     // 1602 => [2626]
            map.insert(1477, &[16962]);     // 1477 => [16962]
            map.insert(1652, &[5186]);     // 1652 => [5186]
            map.insert(1303, &[9282]);     // 1303 => [9282]
            map.insert(408, &[6210]);     // 408 => [6210]
            map.insert(763, &[10306]);     // 763 => [10306]
            map.insert(543, &[20546]);     // 543 => [20546]
            map.insert(380, &[24642]);     // 380 => [24642]
            map.insert(622, &[1410]);     // 622 => [1410]
            map.insert(1112, &[4482]);     // 1112 => [4482]
            map.insert(1851, &[8578]);     // 1851 => [8578]
            map.insert(366, &[1666]);     // 366 => [1666]
            map.insert(1880, &[4738]);     // 1880 => [4738]
            map.insert(1083, &[8834]);     // 1083 => [8834]
            map.insert(1902, &[3202]);     // 1902 => [3202]
            map.insert(1257, &[17538]);     // 1257 => [17538]
            map.insert(344, &[6274]);     // 344 => [6274]
            map.insert(571, &[10370]);     // 571 => [10370]
            map.insert(735, &[20610]);     // 735 => [20610]
            map.insert(444, &[24706]);     // 444 => [24706]
            map.insert(238, &[1794]);     // 238 => [1794]
            map.insert(1774, &[3330]);     // 1774 => [3330]
            map.insert(1844, &[5378]);     // 1844 => [5378]
            map.insert(1111, &[9474]);     // 1111 => [9474]
            map.insert(1385, &[17666]);     // 1385 => [17666]
            map.insert(216, &[6402]);     // 216 => [6402]
            map.insert(955, &[10498]);     // 955 => [10498]
            map.insert(863, &[20738]);     // 863 => [20738]
            map.insert(60, &[24834]);     // 60 => [24834]
            map.insert(1518, &[3586]);     // 1518 => [3586]
            map.insert(1076, &[5634]);     // 1076 => [5634]
            map.insert(1879, &[9730]);     // 1879 => [9730]
            map.insert(1641, &[17922]);     // 1641 => [17922]
            map.insert(984, &[6658]);     // 984 => [6658]
            map.insert(187, &[10754]);     // 187 => [10754]
            map.insert(95, &[20994]);     // 95 => [20994]
            map.insert(828, &[25090]);     // 828 => [25090]
            map.insert(564, &[7170]);     // 564 => [7170]
            map.insert(343, &[11266]);     // 343 => [11266]
            map.insert(435, &[21506]);     // 435 => [21506]
            map.insert(720, &[25602]);     // 720 => [25602]
            map.insert(1889, &[14338]);     // 1889 => [14338]
            map.insert(1631, &[22530]);     // 1631 => [22530]
            map.insert(1340, &[26626]);     // 1340 => [26626]
            map.insert(1254, &[28674]);     // 1254 => [28674]
            map.insert(156, &[156]);     // 156 => [156]
            map.insert(1008, &[1052]);     // 1008 => [1052]
            map.insert(1052, &[2076]);     // 1052 => [2076]
            map.insert(108, &[108]);     // 108 => [108]
            map.insert(172, &[172]);     // 172 => [172]
            map.insert(556, &[556]);     // 556 => [556]
            map.insert(960, &[1068]);     // 960 => [1068]
            map.insert(1068, &[2092]);     // 1068 => [2092]
            map.insert(1526, &[4140]);     // 1526 => [4140]
            map.insert(204, &[204]);     // 204 => [204]
            map.insert(332, &[332]);     // 332 => [332]
            map.insert(928, &[1100]);     // 928 => [1100]
            map.insert(1100, &[2124]);     // 1100 => [2124]
            map.insert(1781, &[8268]);     // 1781 => [8268]
            map.insert(396, &[396]);     // 396 => [396]
            map.insert(652, &[652]);     // 652 => [652]
            map.insert(1164, &[2188]);     // 1164 => [2188]
            map.insert(1803, &[16524]);     // 1803 => [16524]
            map.insert(780, &[780]);     // 780 => [780]
            map.insert(736, &[1292]);     // 736 => [1292]
            map.insert(1292, &[2316]);     // 1292 => [2316]
            map.insert(1238, &[4364]);     // 1238 => [4364]
            map.insert(480, &[1548]);     // 480 => [1548]
            map.insert(1548, &[2572]);     // 1548 => [2572]
            map.insert(1205, &[8716]);     // 1205 => [8716]
            map.insert(2016, &[3084]);     // 2016 => [3084]
            map.insert(1127, &[17420]);     // 1127 => [17420]
            map.insert(470, &[6156]);     // 470 => [6156]
            map.insert(693, &[10252]);     // 693 => [10252]
            map.insert(907, &[18444]);     // 907 => [18444]
            map.insert(116, &[116]);     // 116 => [116]
            map.insert(180, &[180]);     // 180 => [180]
            map.insert(212, &[212]);     // 212 => [212]
            map.insert(404, &[404]);     // 404 => [404]
            map.insert(660, &[660]);     // 660 => [660]
            map.insert(888, &[1172]);     // 888 => [1172]
            map.insert(1172, &[2196]);     // 1172 => [2196]
            map.insert(1358, &[4244]);     // 1358 => [4244]
            map.insert(1581, &[8340]);     // 1581 => [8340]
            map.insert(1811, &[16532]);     // 1811 => [16532]
            map.insert(788, &[788]);     // 788 => [788]
            map.insert(1230, &[4372]);     // 1230 => [4372]
            map.insert(1197, &[8724]);     // 1197 => [8724]
            map.insert(1151, &[17428]);     // 1151 => [17428]
            map.insert(915, &[18452]);     // 915 => [18452]
            map.insert(887, &[12308]);     // 887 => [12308]
            map.insert(228, &[228]);     // 228 => [228]
            map.insert(356, &[356]);     // 356 => [356]
            map.insert(612, &[612]);     // 612 => [612]
            map.insert(904, &[1124]);     // 904 => [1124]
            map.insert(1124, &[2148]);     // 1124 => [2148]
            map.insert(1470, &[4196]);     // 1470 => [4196]
            map.insert(1757, &[8292]);     // 1757 => [8292]
            map.insert(2019, &[16484]);     // 2019 => [16484]
            map.insert(420, &[420]);     // 420 => [420]
            map.insert(676, &[676]);     // 676 => [676]
            map.insert(840, &[1188]);     // 840 => [1188]
            map.insert(1188, &[2212]);     // 1188 => [2212]
            map.insert(1406, &[4260]);     // 1406 => [4260]
            map.insert(1565, &[8356]);     // 1565 => [8356]
            map.insert(1827, &[16548]);     // 1827 => [16548]
            map.insert(804, &[804]);     // 804 => [804]
            map.insert(712, &[1316]);     // 712 => [1316]
            map.insert(1316, &[2340]);     // 1316 => [2340]
            map.insert(1278, &[4388]);     // 1278 => [4388]
            map.insert(1181, &[8740]);     // 1181 => [8740]
            map.insert(1443, &[16932]);     // 1443 => [16932]
            map.insert(1393, &[9252]);     // 1393 => [9252]
            map.insert(1103, &[17444]);     // 1103 => [17444]
            map.insert(669, &[10276]);     // 669 => [10276]
            map.insert(931, &[18468]);     // 931 => [18468]
            map.insert(839, &[12324]);     // 839 => [12324]
            map.insert(633, &[20516]);     // 633 => [20516]
            map.insert(452, &[452]);     // 452 => [452]
            map.insert(708, &[708]);     // 708 => [708]
            map.insert(808, &[1220]);     // 808 => [1220]
            map.insert(1220, &[2244]);     // 1220 => [2244]
            map.insert(1310, &[4292]);     // 1310 => [4292]
            map.insert(1661, &[8388]);     // 1661 => [8388]
            map.insert(1859, &[16580]);     // 1859 => [16580]
            map.insert(836, &[836]);     // 836 => [836]
            map.insert(1182, &[4420]);     // 1182 => [4420]
            map.insert(1731, &[16708]);     // 1731 => [16708]
            map.insert(424, &[1604]);     // 424 => [1604]
            map.insert(1604, &[2628]);     // 1604 => [2628]
            map.insert(1277, &[8772]);     // 1277 => [8772]
            map.insert(1650, &[5188]);     // 1650 => [5188]
            map.insert(1071, &[17476]);     // 1071 => [17476]
            map.insert(414, &[6212]);     // 414 => [6212]
            map.insert(963, &[18500]);     // 963 => [18500]
            map.insert(807, &[12356]);     // 807 => [12356]
            map.insert(378, &[24644]);     // 378 => [24644]
            map.insert(616, &[1412]);     // 616 => [1412]
            map.insert(1118, &[4484]);     // 1118 => [4484]
            map.insert(1853, &[8580]);     // 1853 => [8580]
            map.insert(360, &[1668]);     // 360 => [1668]
            map.insert(1886, &[4740]);     // 1886 => [4740]
            map.insert(1085, &[8836]);     // 1085 => [8836]
            map.insert(1896, &[3204]);     // 1896 => [3204]
            map.insert(1263, &[17540]);     // 1263 => [17540]
            map.insert(350, &[6276]);     // 350 => [6276]
            map.insert(573, &[10372]);     // 573 => [10372]
            map.insert(729, &[20612]);     // 729 => [20612]
            map.insert(442, &[24708]);     // 442 => [24708]
            map.insert(232, &[1796]);     // 232 => [1796]
            map.insert(1758, &[4868]);     // 1758 => [4868]
            map.insert(1469, &[8964]);     // 1469 => [8964]
            map.insert(1842, &[5380]);     // 1842 => [5380]
            map.insert(1391, &[17668]);     // 1391 => [17668]
            map.insert(222, &[6404]);     // 222 => [6404]
            map.insert(615, &[12548]);     // 615 => [12548]
            map.insert(857, &[20740]);     // 857 => [20740]
            map.insert(1873, &[9732]);     // 1873 => [9732]
            map.insert(1647, &[17924]);     // 1647 => [17924]
            map.insert(189, &[10756]);     // 189 => [10756]
            map.insert(359, &[12804]);     // 359 => [12804]
            map.insert(826, &[25092]);     // 826 => [25092]
            map.insert(111, &[19460]);     // 111 => [19460]
            map.insert(437, &[21508]);     // 437 => [21508]
            map.insert(726, &[25604]);     // 726 => [25604]
            map.insert(1895, &[14340]);     // 1895 => [14340]
            map.insert(1625, &[22532]);     // 1625 => [22532]
            map.insert(1338, &[26628]);     // 1338 => [26628]
            map.insert(1248, &[28676]);     // 1248 => [28676]
            map.insert(120, &[120]);     // 120 => [120]
            map.insert(980, &[1080]);     // 980 => [1080]
            map.insert(1506, &[4152]);     // 1506 => [4152]
            map.insert(948, &[1112]);     // 948 => [1112]
            map.insert(1761, &[8280]);     // 1761 => [8280]
            map.insert(884, &[1176]);     // 884 => [1176]
            map.insert(1823, &[16536]);     // 1823 => [16536]
            map.insert(792, &[792]);     // 792 => [792]
            map.insert(756, &[1304]);     // 756 => [1304]
            map.insert(500, &[1560]);     // 500 => [1560]
            map.insert(2036, &[3096]);     // 2036 => [3096]
            map.insert(1582, &[5144]);     // 1582 => [5144]
            map.insert(1357, &[9240]);     // 1357 => [9240]
            map.insert(1139, &[17432]);     // 1139 => [17432]
            map.insert(927, &[18456]);     // 927 => [18456]
            map.insert(891, &[12312]);     // 891 => [12312]
            map.insert(1458, &[4200]);     // 1458 => [4200]
            map.insert(1745, &[8296]);     // 1745 => [8296]
            map.insert(1394, &[4264]);     // 1394 => [4264]
            map.insert(1839, &[16552]);     // 1839 => [16552]
            map.insert(1320, &[2344]);     // 1320 => [2344]
            map.insert(1266, &[4392]);     // 1266 => [4392]
            map.insert(2034, &[4648]);     // 2034 => [4648]
            map.insert(1455, &[16936]);     // 1455 => [16936]
            map.insert(1566, &[5160]);     // 1566 => [5160]
            map.insert(1405, &[9256]);     // 1405 => [9256]
            map.insert(498, &[6184]);     // 498 => [6184]
            map.insert(843, &[12328]);     // 843 => [12328]
            map.insert(629, &[20520]);     // 629 => [20520]
            map.insert(1649, &[8392]);     // 1649 => [8392]
            map.insert(1871, &[16584]);     // 1871 => [16584]
            map.insert(2033, &[8520]);     // 2033 => [8520]
            map.insert(1743, &[16712]);     // 1743 => [16712]
            map.insert(1608, &[2632]);     // 1608 => [2632]
            map.insert(1265, &[8776]);     // 1265 => [8776]
            map.insert(1662, &[5192]);     // 1662 => [5192]
            map.insert(1309, &[9288]);     // 1309 => [9288]
            map.insert(753, &[10312]);     // 753 => [10312]
            map.insert(811, &[12360]);     // 811 => [12360]
            map.insert(374, &[24648]);     // 374 => [24648]
            map.insert(1841, &[8584]);     // 1841 => [8584]
            map.insert(1551, &[16776]);     // 1551 => [16776]
            map.insert(1874, &[4744]);     // 1874 => [4744]
            map.insert(1295, &[17032]);     // 1295 => [17032]
            map.insert(1892, &[3208]);     // 1892 => [3208]
            map.insert(1251, &[17544]);     // 1251 => [17544]
            map.insert(783, &[18568]);     // 783 => [18568]
            map.insert(725, &[20616]);     // 725 => [20616]
            map.insert(438, &[24712]);     // 438 => [24712]
            map.insert(1800, &[2824]);     // 1800 => [2824]
            map.insert(1746, &[4872]);     // 1746 => [4872]
            map.insert(1457, &[8968]);     // 1457 => [8968]
            map.insert(1167, &[17160]);     // 1167 => [17160]
            map.insert(1764, &[3336]);     // 1764 => [3336]
            map.insert(1854, &[5384]);     // 1854 => [5384]
            map.insert(1117, &[9480]);     // 1117 => [9480]
            map.insert(1379, &[17672]);     // 1379 => [17672]
            map.insert(945, &[10504]);     // 945 => [10504]
            map.insert(655, &[18696]);     // 655 => [18696]
            map.insert(619, &[12552]);     // 619 => [12552]
            map.insert(853, &[20744]);     // 853 => [20744]
            map.insert(1508, &[3592]);     // 1508 => [3592]
            map.insert(1086, &[5640]);     // 1086 => [5640]
            map.insert(1885, &[9736]);     // 1885 => [9736]
            map.insert(1635, &[17928]);     // 1635 => [17928]
            map.insert(978, &[6664]);     // 978 => [6664]
            map.insert(399, &[18952]);     // 399 => [18952]
            map.insert(363, &[12808]);     // 363 => [12808]
            map.insert(822, &[25096]);     // 822 => [25096]
            map.insert(574, &[7176]);     // 574 => [7176]
            map.insert(349, &[11272]);     // 349 => [11272]
            map.insert(441, &[21512]);     // 441 => [21512]
            map.insert(730, &[25608]);     // 730 => [25608]
            map.insert(1899, &[14344]);     // 1899 => [14344]
            map.insert(1621, &[22536]);     // 1621 => [22536]
            map.insert(1334, &[26632]);     // 1334 => [26632]
            map.insert(1260, &[28680]);     // 1260 => [28680]
            map.insert(240, &[240]);     // 240 => [240]
            map.insert(368, &[368]);     // 368 => [368]
            map.insert(624, &[624]);     // 624 => [624]
            map.insert(924, &[1136]);     // 924 => [1136]
            map.insert(1136, &[2160]);     // 1136 => [2160]
            map.insert(1450, &[4208]);     // 1450 => [4208]
            map.insert(1737, &[8304]);     // 1737 => [8304]
            map.insert(2039, &[16496]);     // 2039 => [16496]
            map.insert(816, &[816]);     // 816 => [816]
            map.insert(1328, &[2352]);     // 1328 => [2352]
            map.insert(1463, &[16944]);     // 1463 => [16944]
            map.insert(1381, &[9264]);     // 1381 => [9264]
            map.insert(951, &[18480]);     // 951 => [18480]
            map.insert(851, &[12336]);     // 851 => [12336]
            map.insert(848, &[848]);     // 848 => [848]
            map.insert(1751, &[16720]);     // 1751 => [16720]
            map.insert(1616, &[2640]);     // 1616 => [2640]
            map.insert(1638, &[5200]);     // 1638 => [5200]
            map.insert(983, &[18512]);     // 983 => [18512]
            map.insert(819, &[12368]);     // 819 => [12368]
            map.insert(912, &[912]);     // 912 => [912]
            map.insert(1833, &[8592]);     // 1833 => [8592]
            map.insert(1866, &[4752]);     // 1866 => [4752]
            map.insert(1916, &[3216]);     // 1916 => [3216]
            map.insert(791, &[18576]);     // 791 => [18576]
            map.insert(1011, &[12432]);     // 1011 => [12432]
            map.insert(252, &[1808]);     // 252 => [1808]
            map.insert(1808, &[2832]);     // 1808 => [2832]
            map.insert(1738, &[4880]);     // 1738 => [4880]
            map.insert(1449, &[8976]);     // 1449 => [8976]
            map.insert(1175, &[17168]);     // 1175 => [17168]
            map.insert(663, &[18704]);     // 663 => [18704]
            map.insert(627, &[12560]);     // 627 => [12560]
            map.insert(407, &[18960]);     // 407 => [18960]
            map.insert(371, &[12816]);     // 371 => [12816]
            map.insert(123, &[19472]);     // 123 => [19472]
            map.insert(159, &[13328]);     // 159 => [13328]
            map.insert(1907, &[14352]);     // 1907 => [14352]
            map.insert(1613, &[22544]);     // 1613 => [22544]
            map.insert(1326, &[26640]);     // 1326 => [26640]
            map.insert(1268, &[28688]);     // 1268 => [28688]
            map.insert(1376, &[2400]);     // 1376 => [2400]
            map.insert(1767, &[16736]);     // 1767 => [16736]
            map.insert(1632, &[2656]);     // 1632 => [2656]
            map.insert(1511, &[16992]);     // 1511 => [16992]
            map.insert(1622, &[5216]);     // 1622 => [5216]
            map.insert(1333, &[9312]);     // 1333 => [9312]
            map.insert(1440, &[2464]);     // 1440 => [2464]
            map.insert(1817, &[8608]);     // 1817 => [8608]
            map.insert(1914, &[4768]);     // 1914 => [4768]
            map.insert(1319, &[17056]);     // 1319 => [17056]
            map.insert(1868, &[3232]);     // 1868 => [3232]
            map.insert(1525, &[9376]);     // 1525 => [9376]
            map.insert(1824, &[2848]);     // 1824 => [2848]
            map.insert(1191, &[17184]);     // 1191 => [17184]
            map.insert(1740, &[3360]);     // 1740 => [3360]
            map.insert(1141, &[9504]);     // 1141 => [9504]
            map.insert(250, &[6432]);     // 250 => [6432]
            map.insert(921, &[10528]);     // 921 => [10528]
            map.insert(679, &[18720]);     // 679 => [18720]
            map.insert(1909, &[9760]);     // 1909 => [9760]
            map.insert(1611, &[17952]);     // 1611 => [17952]
            map.insert(423, &[18976]);     // 423 => [18976]
            map.insert(125, &[21024]);     // 125 => [21024]
            map.insert(798, &[25120]);     // 798 => [25120]
            map.insert(373, &[11296]);     // 373 => [11296]
            map.insert(175, &[13344]);     // 175 => [13344]
            map.insert(754, &[25632]);     // 754 => [25632]
            map.insert(1913, &[8640]);     // 1913 => [8640]
            map.insert(1607, &[16832]);     // 1607 => [16832]
            map.insert(1728, &[2752]);     // 1728 => [2752]
            map.insert(1818, &[4800]);     // 1818 => [4800]
            map.insert(1836, &[3264]);     // 1836 => [3264]
            map.insert(1782, &[5312]);     // 1782 => [5312]
            map.insert(1856, &[2880]);     // 1856 => [2880]
            map.insert(1223, &[17216]);     // 1223 => [17216]
            map.insert(1910, &[5440]);     // 1910 => [5440]
            map.insert(1323, &[17728]);     // 1323 => [17728]
            map.insert(711, &[18752]);     // 711 => [18752]
            map.insert(797, &[20800]);     // 797 => [20800]
            map.insert(126, &[24896]);     // 126 => [24896]
            map.insert(1452, &[3648]);     // 1452 => [3648]
            map.insert(1142, &[5696]);     // 1142 => [5696]
            map.insert(922, &[6720]);     // 922 => [6720]
            map.insert(249, &[10816]);     // 249 => [10816]
            map.insert(455, &[19008]);     // 455 => [19008]
            map.insert(630, &[7232]);     // 630 => [7232]
            map.insert(207, &[13376]);     // 207 => [13376]
            map.insert(497, &[21568]);     // 497 => [21568]
            map.insert(1626, &[4992]);     // 1626 => [4992]
            map.insert(1337, &[9088]);     // 1337 => [9088]
            map.insert(1644, &[3456]);     // 1644 => [3456]
            map.insert(1237, &[9600]);     // 1237 => [9600]
            map.insert(825, &[10624]);     // 825 => [10624]
            map.insert(739, &[12672]);     // 739 => [12672]
            map.insert(190, &[24960]);     // 190 => [24960]
            map.insert(1388, &[3712]);     // 1388 => [3712]
            map.insert(1206, &[5760]);     // 1206 => [5760]
            map.insert(858, &[6784]);     // 858 => [6784]
            map.insert(483, &[12928]);     // 483 => [12928]
            map.insert(221, &[21120]);     // 221 => [21120]
            map.insert(694, &[7296]);     // 694 => [7296]
            map.insert(469, &[11392]);     // 469 => [11392]
            map.insert(235, &[19584]);     // 235 => [19584]
            map.insert(31, &[31]);     // 31 => [31]
            map.insert(47, &[47]);     // 47 => [47]
            map.insert(79, &[79]);     // 79 => [79]
            map.insert(271, &[271]);     // 271 => [271]
            map.insert(527, &[527]);     // 527 => [527]
            map.insert(1039, &[2063]);     // 1039 => [2063]
            map.insert(1928, &[16399]);     // 1928 => [16399]
            map.insert(55, &[55]);     // 55 => [55]
            map.insert(87, &[87]);     // 87 => [87]
            map.insert(151, &[151]);     // 151 => [151]
            map.insert(279, &[279]);     // 279 => [279]
            map.insert(535, &[535]);     // 535 => [535]
            map.insert(1019, &[1047]);     // 1019 => [1047]
            map.insert(1047, &[2071]);     // 1047 => [2071]
            map.insert(1485, &[4119]);     // 1485 => [4119]
            map.insert(1710, &[8215]);     // 1710 => [8215]
            map.insert(1936, &[16407]);     // 1936 => [16407]
            map.insert(103, &[103]);     // 103 => [103]
            map.insert(167, &[167]);     // 167 => [167]
            map.insert(295, &[295]);     // 295 => [295]
            map.insert(551, &[551]);     // 551 => [551]
            map.insert(971, &[1063]);     // 971 => [1063]
            map.insert(1063, &[2087]);     // 1063 => [2087]
            map.insert(1533, &[4135]);     // 1533 => [4135]
            map.insert(1694, &[8231]);     // 1694 => [8231]
            map.insert(1952, &[16423]);     // 1952 => [16423]
            map.insert(199, &[199]);     // 199 => [199]
            map.insert(327, &[327]);     // 327 => [327]
            map.insert(583, &[583]);     // 583 => [583]
            map.insert(939, &[1095]);     // 939 => [1095]
            map.insert(1095, &[2119]);     // 1095 => [2119]
            map.insert(1437, &[4167]);     // 1437 => [4167]
            map.insert(1790, &[8263]);     // 1790 => [8263]
            map.insert(1984, &[16455]);     // 1984 => [16455]
            map.insert(747, &[1287]);     // 747 => [1287]
            map.insert(1245, &[4359]);     // 1245 => [4359]
            map.insert(1982, &[8455]);     // 1982 => [8455]
            map.insert(491, &[1543]);     // 491 => [1543]
            map.insert(2013, &[4615]);     // 2013 => [4615]
            map.insert(1214, &[8711]);     // 1214 => [8711]
            map.insert(2027, &[3079]);     // 2027 => [3079]
            map.insert(1132, &[17415]);     // 1132 => [17415]
            map.insert(477, &[6151]);     // 477 => [6151]
            map.insert(702, &[10247]);     // 702 => [10247]
            map.insert(602, &[20487]);     // 602 => [20487]
            map.insert(313, &[24583]);     // 313 => [24583]
            map.insert(59, &[59]);     // 59 => [59]
            map.insert(91, &[91]);     // 91 => [91]
            map.insert(155, &[155]);     // 155 => [155]
            map.insert(283, &[283]);     // 283 => [283]
            map.insert(539, &[539]);     // 539 => [539]
            map.insert(1015, &[1051]);     // 1015 => [1051]
            map.insert(1051, &[2075]);     // 1051 => [2075]
            map.insert(1473, &[4123]);     // 1473 => [4123]
            map.insert(1698, &[8219]);     // 1698 => [8219]
            map.insert(1948, &[16411]);     // 1948 => [16411]
            map.insert(171, &[171]);     // 171 => [171]
            map.insert(299, &[299]);     // 299 => [299]
            map.insert(555, &[555]);     // 555 => [555]
            map.insert(1521, &[4139]);     // 1521 => [4139]
            map.insert(1682, &[8235]);     // 1682 => [8235]
            map.insert(203, &[203]);     // 203 => [203]
            map.insert(331, &[331]);     // 331 => [331]
            map.insert(587, &[587]);     // 587 => [587]
            map.insert(1425, &[4171]);     // 1425 => [4171]
            map.insert(1778, &[8267]);     // 1778 => [8267]
            map.insert(395, &[395]);     // 395 => [395]
            map.insert(651, &[651]);     // 651 => [651]
            map.insert(1163, &[2187]);     // 1163 => [2187]
            map.insert(1804, &[16523]);     // 1804 => [16523]
            map.insert(779, &[779]);     // 779 => [779]
            map.insert(743, &[1291]);     // 743 => [1291]
            map.insert(1291, &[2315]);     // 1291 => [2315]
            map.insert(1233, &[4363]);     // 1233 => [4363]
            map.insert(1970, &[8459]);     // 1970 => [8459]
            map.insert(1676, &[16651]);     // 1676 => [16651]
            map.insert(487, &[1547]);     // 487 => [1547]
            map.insert(1547, &[2571]);     // 1547 => [2571]
            map.insert(2001, &[4619]);     // 2001 => [4619]
            map.insert(1202, &[8715]);     // 1202 => [8715]
            map.insert(1420, &[16907]);     // 1420 => [16907]
            map.insert(465, &[6155]);     // 465 => [6155]
            map.insert(690, &[10251]);     // 690 => [10251]
            map.insert(598, &[20491]);     // 598 => [20491]
            map.insert(309, &[24587]);     // 309 => [24587]
            map.insert(115, &[115]);     // 115 => [115]
            map.insert(179, &[179]);     // 179 => [179]
            map.insert(307, &[307]);     // 307 => [307]
            map.insert(563, &[563]);     // 563 => [563]
            map.insert(991, &[1075]);     // 991 => [1075]
            map.insert(1075, &[2099]);     // 1075 => [2099]
            map.insert(1513, &[4147]);     // 1513 => [4147]
            map.insert(1674, &[8243]);     // 1674 => [8243]
            map.insert(1972, &[16435]);     // 1972 => [16435]
            map.insert(211, &[211]);     // 211 => [211]
            map.insert(339, &[339]);     // 339 => [339]
            map.insert(595, &[595]);     // 595 => [595]
            map.insert(959, &[1107]);     // 959 => [1107]
            map.insert(1107, &[2131]);     // 1107 => [2131]
            map.insert(1417, &[4179]);     // 1417 => [4179]
            map.insert(1770, &[8275]);     // 1770 => [8275]
            map.insert(2004, &[16467]);     // 2004 => [16467]
            map.insert(403, &[403]);     // 403 => [403]
            map.insert(659, &[659]);     // 659 => [659]
            map.insert(895, &[1171]);     // 895 => [1171]
            map.insert(1171, &[2195]);     // 1171 => [2195]
            map.insert(1353, &[4243]);     // 1353 => [4243]
            map.insert(1578, &[8339]);     // 1578 => [8339]
            map.insert(1812, &[16531]);     // 1812 => [16531]
            map.insert(787, &[787]);     // 787 => [787]
            map.insert(767, &[1299]);     // 767 => [1299]
            map.insert(1299, &[2323]);     // 1299 => [2323]
            map.insert(1225, &[4371]);     // 1225 => [4371]
            map.insert(1962, &[8467]);     // 1962 => [8467]
            map.insert(1684, &[16659]);     // 1684 => [16659]
            map.insert(511, &[1555]);     // 511 => [1555]
            map.insert(1555, &[2579]);     // 1555 => [2579]
            map.insert(1993, &[4627]);     // 1993 => [4627]
            map.insert(1194, &[8723]);     // 1194 => [8723]
            map.insert(1428, &[16915]);     // 1428 => [16915]
            map.insert(2047, &[3091]);     // 2047 => [3091]
            map.insert(1573, &[5139]);     // 1573 => [5139]
            map.insert(1350, &[9235]);     // 1350 => [9235]
            map.insert(1144, &[17427]);     // 1144 => [17427]
            map.insert(457, &[6163]);     // 457 => [6163]
            map.insert(682, &[10259]);     // 682 => [10259]
            map.insert(916, &[18451]);     // 916 => [18451]
            map.insert(880, &[12307]);     // 880 => [12307]
            map.insert(590, &[20499]);     // 590 => [20499]
            map.insert(301, &[24595]);     // 301 => [24595]
            map.insert(227, &[227]);     // 227 => [227]
            map.insert(419, &[419]);     // 419 => [419]
            map.insert(675, &[675]);     // 675 => [675]
            map.insert(847, &[1187]);     // 847 => [1187]
            map.insert(1187, &[2211]);     // 1187 => [2211]
            map.insert(1401, &[4259]);     // 1401 => [4259]
            map.insert(1562, &[8355]);     // 1562 => [8355]
            map.insert(1828, &[16547]);     // 1828 => [16547]
            map.insert(719, &[1315]);     // 719 => [1315]
            map.insert(1315, &[2339]);     // 1315 => [2339]
            map.insert(1700, &[16675]);     // 1700 => [16675]
            map.insert(463, &[1571]);     // 463 => [1571]
            map.insert(1571, &[2595]);     // 1571 => [2595]
            map.insert(1444, &[16931]);     // 1444 => [16931]
            map.insert(1557, &[5155]);     // 1557 => [5155]
            map.insert(1398, &[9251]);     // 1398 => [9251]
            map.insert(505, &[6179]);     // 505 => [6179]
            map.insert(666, &[10275]);     // 666 => [10275]
            map.insert(638, &[20515]);     // 638 => [20515]
            map.insert(285, &[24611]);     // 285 => [24611]
            map.insert(451, &[451]);     // 451 => [451]
            map.insert(707, &[707]);     // 707 => [707]
            map.insert(815, &[1219]);     // 815 => [1219]
            map.insert(1219, &[2243]);     // 1219 => [2243]
            map.insert(1305, &[4291]);     // 1305 => [4291]
            map.insert(1658, &[8387]);     // 1658 => [8387]
            map.insert(1860, &[16579]);     // 1860 => [16579]
            map.insert(687, &[1347]);     // 687 => [1347]
            map.insert(1347, &[2371]);     // 1347 => [2371]
            map.insert(1732, &[16707]);     // 1732 => [16707]
            map.insert(431, &[1603]);     // 431 => [1603]
            map.insert(1603, &[2627]);     // 1603 => [2627]
            map.insert(1476, &[16963]);     // 1476 => [16963]
            map.insert(1653, &[5187]);     // 1653 => [5187]
            map.insert(1302, &[9283]);     // 1302 => [9283]
            map.insert(409, &[6211]);     // 409 => [6211]
            map.insert(762, &[10307]);     // 762 => [10307]
            map.insert(542, &[20547]);     // 542 => [20547]
            map.insert(381, &[24643]);     // 381 => [24643]
            map.insert(623, &[1411]);     // 623 => [1411]
            map.insert(1113, &[4483]);     // 1113 => [4483]
            map.insert(1850, &[8579]);     // 1850 => [8579]
            map.insert(367, &[1667]);     // 367 => [1667]
            map.insert(1881, &[4739]);     // 1881 => [4739]
            map.insert(1082, &[8835]);     // 1082 => [8835]
            map.insert(1903, &[3203]);     // 1903 => [3203]
            map.insert(1256, &[17539]);     // 1256 => [17539]
            map.insert(345, &[6275]);     // 345 => [6275]
            map.insert(570, &[10371]);     // 570 => [10371]
            map.insert(734, &[20611]);     // 734 => [20611]
            map.insert(445, &[24707]);     // 445 => [24707]
            map.insert(239, &[1795]);     // 239 => [1795]
            map.insert(1775, &[3331]);     // 1775 => [3331]
            map.insert(1845, &[5379]);     // 1845 => [5379]
            map.insert(1110, &[9475]);     // 1110 => [9475]
            map.insert(1384, &[17667]);     // 1384 => [17667]
            map.insert(217, &[6403]);     // 217 => [6403]
            map.insert(954, &[10499]);     // 954 => [10499]
            map.insert(862, &[20739]);     // 862 => [20739]
            map.insert(61, &[24835]);     // 61 => [24835]
            map.insert(1519, &[3587]);     // 1519 => [3587]
            map.insert(1077, &[5635]);     // 1077 => [5635]
            map.insert(1878, &[9731]);     // 1878 => [9731]
            map.insert(1640, &[17923]);     // 1640 => [17923]
            map.insert(985, &[6659]);     // 985 => [6659]
            map.insert(186, &[10755]);     // 186 => [10755]
            map.insert(94, &[20995]);     // 94 => [20995]
            map.insert(829, &[25091]);     // 829 => [25091]
            map.insert(565, &[7171]);     // 565 => [7171]
            map.insert(342, &[11267]);     // 342 => [11267]
            map.insert(434, &[21507]);     // 434 => [21507]
            map.insert(721, &[25603]);     // 721 => [25603]
            map.insert(1888, &[14339]);     // 1888 => [14339]
            map.insert(1630, &[22531]);     // 1630 => [22531]
            map.insert(1341, &[26627]);     // 1341 => [26627]
            map.insert(1255, &[28675]);     // 1255 => [28675]
            map.insert(157, &[157]);     // 157 => [157]
            map.insert(1009, &[1053]);     // 1009 => [1053]
            map.insert(1053, &[2077]);     // 1053 => [2077]
            map.insert(109, &[109]);     // 109 => [109]
            map.insert(173, &[173]);     // 173 => [173]
            map.insert(557, &[557]);     // 557 => [557]
            map.insert(961, &[1069]);     // 961 => [1069]
            map.insert(1069, &[2093]);     // 1069 => [2093]
            map.insert(1527, &[4141]);     // 1527 => [4141]
            map.insert(205, &[205]);     // 205 => [205]
            map.insert(333, &[333]);     // 333 => [333]
            map.insert(929, &[1101]);     // 929 => [1101]
            map.insert(1101, &[2125]);     // 1101 => [2125]
            map.insert(1780, &[8269]);     // 1780 => [8269]
            map.insert(397, &[397]);     // 397 => [397]
            map.insert(653, &[653]);     // 653 => [653]
            map.insert(1165, &[2189]);     // 1165 => [2189]
            map.insert(1802, &[16525]);     // 1802 => [16525]
            map.insert(781, &[781]);     // 781 => [781]
            map.insert(737, &[1293]);     // 737 => [1293]
            map.insert(1293, &[2317]);     // 1293 => [2317]
            map.insert(1239, &[4365]);     // 1239 => [4365]
            map.insert(481, &[1549]);     // 481 => [1549]
            map.insert(1549, &[2573]);     // 1549 => [2573]
            map.insert(1204, &[8717]);     // 1204 => [8717]
            map.insert(2017, &[3085]);     // 2017 => [3085]
            map.insert(1126, &[17421]);     // 1126 => [17421]
            map.insert(471, &[6157]);     // 471 => [6157]
            map.insert(692, &[10253]);     // 692 => [10253]
            map.insert(906, &[18445]);     // 906 => [18445]
            map.insert(117, &[117]);     // 117 => [117]
            map.insert(181, &[181]);     // 181 => [181]
            map.insert(213, &[213]);     // 213 => [213]
            map.insert(405, &[405]);     // 405 => [405]
            map.insert(661, &[661]);     // 661 => [661]
            map.insert(889, &[1173]);     // 889 => [1173]
            map.insert(1173, &[2197]);     // 1173 => [2197]
            map.insert(1359, &[4245]);     // 1359 => [4245]
            map.insert(1580, &[8341]);     // 1580 => [8341]
            map.insert(1810, &[16533]);     // 1810 => [16533]
            map.insert(789, &[789]);     // 789 => [789]
            map.insert(1231, &[4373]);     // 1231 => [4373]
            map.insert(1196, &[8725]);     // 1196 => [8725]
            map.insert(1150, &[17429]);     // 1150 => [17429]
            map.insert(914, &[18453]);     // 914 => [18453]
            map.insert(886, &[12309]);     // 886 => [12309]
            map.insert(229, &[229]);     // 229 => [229]
            map.insert(357, &[357]);     // 357 => [357]
            map.insert(613, &[613]);     // 613 => [613]
            map.insert(905, &[1125]);     // 905 => [1125]
            map.insert(1125, &[2149]);     // 1125 => [2149]
            map.insert(1471, &[4197]);     // 1471 => [4197]
            map.insert(1756, &[8293]);     // 1756 => [8293]
            map.insert(2018, &[16485]);     // 2018 => [16485]
            map.insert(421, &[421]);     // 421 => [421]
            map.insert(677, &[677]);     // 677 => [677]
            map.insert(841, &[1189]);     // 841 => [1189]
            map.insert(1189, &[2213]);     // 1189 => [2213]
            map.insert(1407, &[4261]);     // 1407 => [4261]
            map.insert(1564, &[8357]);     // 1564 => [8357]
            map.insert(1826, &[16549]);     // 1826 => [16549]
            map.insert(805, &[805]);     // 805 => [805]
            map.insert(713, &[1317]);     // 713 => [1317]
            map.insert(1317, &[2341]);     // 1317 => [2341]
            map.insert(1279, &[4389]);     // 1279 => [4389]
            map.insert(1180, &[8741]);     // 1180 => [8741]
            map.insert(1442, &[16933]);     // 1442 => [16933]
            map.insert(1392, &[9253]);     // 1392 => [9253]
            map.insert(1102, &[17445]);     // 1102 => [17445]
            map.insert(668, &[10277]);     // 668 => [10277]
            map.insert(930, &[18469]);     // 930 => [18469]
            map.insert(838, &[12325]);     // 838 => [12325]
            map.insert(632, &[20517]);     // 632 => [20517]
            map.insert(453, &[453]);     // 453 => [453]
            map.insert(709, &[709]);     // 709 => [709]
            map.insert(809, &[1221]);     // 809 => [1221]
            map.insert(1221, &[2245]);     // 1221 => [2245]
            map.insert(1311, &[4293]);     // 1311 => [4293]
            map.insert(1660, &[8389]);     // 1660 => [8389]
            map.insert(1858, &[16581]);     // 1858 => [16581]
            map.insert(837, &[837]);     // 837 => [837]
            map.insert(1183, &[4421]);     // 1183 => [4421]
            map.insert(1730, &[16709]);     // 1730 => [16709]
            map.insert(425, &[1605]);     // 425 => [1605]
            map.insert(1605, &[2629]);     // 1605 => [2629]
            map.insert(1276, &[8773]);     // 1276 => [8773]
            map.insert(1651, &[5189]);     // 1651 => [5189]
            map.insert(1070, &[17477]);     // 1070 => [17477]
            map.insert(415, &[6213]);     // 415 => [6213]
            map.insert(962, &[18501]);     // 962 => [18501]
            map.insert(806, &[12357]);     // 806 => [12357]
            map.insert(379, &[24645]);     // 379 => [24645]
            map.insert(617, &[1413]);     // 617 => [1413]
            map.insert(1119, &[4485]);     // 1119 => [4485]
            map.insert(1852, &[8581]);     // 1852 => [8581]
            map.insert(361, &[1669]);     // 361 => [1669]
            map.insert(1887, &[4741]);     // 1887 => [4741]
            map.insert(1084, &[8837]);     // 1084 => [8837]
            map.insert(1897, &[3205]);     // 1897 => [3205]
            map.insert(1262, &[17541]);     // 1262 => [17541]
            map.insert(351, &[6277]);     // 351 => [6277]
            map.insert(572, &[10373]);     // 572 => [10373]
            map.insert(728, &[20613]);     // 728 => [20613]
            map.insert(443, &[24709]);     // 443 => [24709]
            map.insert(233, &[1797]);     // 233 => [1797]
            map.insert(1759, &[4869]);     // 1759 => [4869]
            map.insert(1468, &[8965]);     // 1468 => [8965]
            map.insert(1843, &[5381]);     // 1843 => [5381]
            map.insert(1390, &[17669]);     // 1390 => [17669]
            map.insert(223, &[6405]);     // 223 => [6405]
            map.insert(614, &[12549]);     // 614 => [12549]
            map.insert(856, &[20741]);     // 856 => [20741]
            map.insert(1872, &[9733]);     // 1872 => [9733]
            map.insert(1646, &[17925]);     // 1646 => [17925]
            map.insert(188, &[10757]);     // 188 => [10757]
            map.insert(358, &[12805]);     // 358 => [12805]
            map.insert(827, &[25093]);     // 827 => [25093]
            map.insert(110, &[19461]);     // 110 => [19461]
            map.insert(436, &[21509]);     // 436 => [21509]
            map.insert(727, &[25605]);     // 727 => [25605]
            map.insert(1894, &[14341]);     // 1894 => [14341]
            map.insert(1624, &[22533]);     // 1624 => [22533]
            map.insert(1339, &[26629]);     // 1339 => [26629]
            map.insert(1249, &[28677]);     // 1249 => [28677]
            map.insert(121, &[121]);     // 121 => [121]
            map.insert(981, &[1081]);     // 981 => [1081]
            map.insert(1507, &[4153]);     // 1507 => [4153]
            map.insert(949, &[1113]);     // 949 => [1113]
            map.insert(1760, &[8281]);     // 1760 => [8281]
            map.insert(885, &[1177]);     // 885 => [1177]
            map.insert(1822, &[16537]);     // 1822 => [16537]
            map.insert(793, &[793]);     // 793 => [793]
            map.insert(757, &[1305]);     // 757 => [1305]
            map.insert(501, &[1561]);     // 501 => [1561]
            map.insert(2037, &[3097]);     // 2037 => [3097]
            map.insert(1583, &[5145]);     // 1583 => [5145]
            map.insert(1356, &[9241]);     // 1356 => [9241]
            map.insert(1138, &[17433]);     // 1138 => [17433]
            map.insert(926, &[18457]);     // 926 => [18457]
            map.insert(890, &[12313]);     // 890 => [12313]
            map.insert(1459, &[4201]);     // 1459 => [4201]
            map.insert(1744, &[8297]);     // 1744 => [8297]
            map.insert(1395, &[4265]);     // 1395 => [4265]
            map.insert(1838, &[16553]);     // 1838 => [16553]
            map.insert(1321, &[2345]);     // 1321 => [2345]
            map.insert(1267, &[4393]);     // 1267 => [4393]
            map.insert(2035, &[4649]);     // 2035 => [4649]
            map.insert(1454, &[16937]);     // 1454 => [16937]
            map.insert(1567, &[5161]);     // 1567 => [5161]
            map.insert(1404, &[9257]);     // 1404 => [9257]
            map.insert(499, &[6185]);     // 499 => [6185]
            map.insert(842, &[12329]);     // 842 => [12329]
            map.insert(628, &[20521]);     // 628 => [20521]
            map.insert(1648, &[8393]);     // 1648 => [8393]
            map.insert(1870, &[16585]);     // 1870 => [16585]
            map.insert(2032, &[8521]);     // 2032 => [8521]
            map.insert(1742, &[16713]);     // 1742 => [16713]
            map.insert(1609, &[2633]);     // 1609 => [2633]
            map.insert(1264, &[8777]);     // 1264 => [8777]
            map.insert(1663, &[5193]);     // 1663 => [5193]
            map.insert(1308, &[9289]);     // 1308 => [9289]
            map.insert(752, &[10313]);     // 752 => [10313]
            map.insert(810, &[12361]);     // 810 => [12361]
            map.insert(375, &[24649]);     // 375 => [24649]
            map.insert(1840, &[8585]);     // 1840 => [8585]
            map.insert(1550, &[16777]);     // 1550 => [16777]
            map.insert(1875, &[4745]);     // 1875 => [4745]
            map.insert(1294, &[17033]);     // 1294 => [17033]
            map.insert(1893, &[3209]);     // 1893 => [3209]
            map.insert(1250, &[17545]);     // 1250 => [17545]
            map.insert(782, &[18569]);     // 782 => [18569]
            map.insert(724, &[20617]);     // 724 => [20617]
            map.insert(439, &[24713]);     // 439 => [24713]
            map.insert(1801, &[2825]);     // 1801 => [2825]
            map.insert(1747, &[4873]);     // 1747 => [4873]
            map.insert(1456, &[8969]);     // 1456 => [8969]
            map.insert(1166, &[17161]);     // 1166 => [17161]
            map.insert(1765, &[3337]);     // 1765 => [3337]
            map.insert(1855, &[5385]);     // 1855 => [5385]
            map.insert(1116, &[9481]);     // 1116 => [9481]
            map.insert(1378, &[17673]);     // 1378 => [17673]
            map.insert(944, &[10505]);     // 944 => [10505]
            map.insert(654, &[18697]);     // 654 => [18697]
            map.insert(618, &[12553]);     // 618 => [12553]
            map.insert(852, &[20745]);     // 852 => [20745]
            map.insert(1509, &[3593]);     // 1509 => [3593]
            map.insert(1087, &[5641]);     // 1087 => [5641]
            map.insert(1884, &[9737]);     // 1884 => [9737]
            map.insert(1634, &[17929]);     // 1634 => [17929]
            map.insert(979, &[6665]);     // 979 => [6665]
            map.insert(398, &[18953]);     // 398 => [18953]
            map.insert(362, &[12809]);     // 362 => [12809]
            map.insert(823, &[25097]);     // 823 => [25097]
            map.insert(575, &[7177]);     // 575 => [7177]
            map.insert(348, &[11273]);     // 348 => [11273]
            map.insert(440, &[21513]);     // 440 => [21513]
            map.insert(731, &[25609]);     // 731 => [25609]
            map.insert(1898, &[14345]);     // 1898 => [14345]
            map.insert(1620, &[22537]);     // 1620 => [22537]
            map.insert(1335, &[26633]);     // 1335 => [26633]
            map.insert(1261, &[28681]);     // 1261 => [28681]
            map.insert(241, &[241]);     // 241 => [241]
            map.insert(369, &[369]);     // 369 => [369]
            map.insert(625, &[625]);     // 625 => [625]
            map.insert(925, &[1137]);     // 925 => [1137]
            map.insert(1137, &[2161]);     // 1137 => [2161]
            map.insert(1451, &[4209]);     // 1451 => [4209]
            map.insert(1736, &[8305]);     // 1736 => [8305]
            map.insert(2038, &[16497]);     // 2038 => [16497]
            map.insert(817, &[817]);     // 817 => [817]
            map.insert(1329, &[2353]);     // 1329 => [2353]
            map.insert(1462, &[16945]);     // 1462 => [16945]
            map.insert(1380, &[9265]);     // 1380 => [9265]
            map.insert(950, &[18481]);     // 950 => [18481]
            map.insert(850, &[12337]);     // 850 => [12337]
            map.insert(849, &[849]);     // 849 => [849]
            map.insert(1750, &[16721]);     // 1750 => [16721]
            map.insert(1617, &[2641]);     // 1617 => [2641]
            map.insert(1639, &[5201]);     // 1639 => [5201]
            map.insert(982, &[18513]);     // 982 => [18513]
            map.insert(818, &[12369]);     // 818 => [12369]
            map.insert(913, &[913]);     // 913 => [913]
            map.insert(1832, &[8593]);     // 1832 => [8593]
            map.insert(1867, &[4753]);     // 1867 => [4753]
            map.insert(1917, &[3217]);     // 1917 => [3217]
            map.insert(790, &[18577]);     // 790 => [18577]
            map.insert(1010, &[12433]);     // 1010 => [12433]
            map.insert(253, &[1809]);     // 253 => [1809]
            map.insert(1809, &[2833]);     // 1809 => [2833]
            map.insert(1739, &[4881]);     // 1739 => [4881]
            map.insert(1448, &[8977]);     // 1448 => [8977]
            map.insert(1174, &[17169]);     // 1174 => [17169]
            map.insert(662, &[18705]);     // 662 => [18705]
            map.insert(626, &[12561]);     // 626 => [12561]
            map.insert(406, &[18961]);     // 406 => [18961]
            map.insert(370, &[12817]);     // 370 => [12817]
            map.insert(122, &[19473]);     // 122 => [19473]
            map.insert(158, &[13329]);     // 158 => [13329]
            map.insert(1906, &[14353]);     // 1906 => [14353]
            map.insert(1612, &[22545]);     // 1612 => [22545]
            map.insert(1327, &[26641]);     // 1327 => [26641]
            map.insert(1269, &[28689]);     // 1269 => [28689]
            map.insert(1377, &[2401]);     // 1377 => [2401]
            map.insert(1766, &[16737]);     // 1766 => [16737]
            map.insert(1633, &[2657]);     // 1633 => [2657]
            map.insert(1510, &[16993]);     // 1510 => [16993]
            map.insert(1623, &[5217]);     // 1623 => [5217]
            map.insert(1332, &[9313]);     // 1332 => [9313]
            map.insert(1441, &[2465]);     // 1441 => [2465]
            map.insert(1816, &[8609]);     // 1816 => [8609]
            map.insert(1915, &[4769]);     // 1915 => [4769]
            map.insert(1318, &[17057]);     // 1318 => [17057]
            map.insert(1869, &[3233]);     // 1869 => [3233]
            map.insert(1524, &[9377]);     // 1524 => [9377]
            map.insert(1825, &[2849]);     // 1825 => [2849]
            map.insert(1190, &[17185]);     // 1190 => [17185]
            map.insert(1741, &[3361]);     // 1741 => [3361]
            map.insert(1140, &[9505]);     // 1140 => [9505]
            map.insert(251, &[6433]);     // 251 => [6433]
            map.insert(920, &[10529]);     // 920 => [10529]
            map.insert(678, &[18721]);     // 678 => [18721]
            map.insert(1908, &[9761]);     // 1908 => [9761]
            map.insert(1610, &[17953]);     // 1610 => [17953]
            map.insert(422, &[18977]);     // 422 => [18977]
            map.insert(124, &[21025]);     // 124 => [21025]
            map.insert(799, &[25121]);     // 799 => [25121]
            map.insert(372, &[11297]);     // 372 => [11297]
            map.insert(174, &[13345]);     // 174 => [13345]
            map.insert(755, &[25633]);     // 755 => [25633]
            map.insert(1912, &[8641]);     // 1912 => [8641]
            map.insert(1606, &[16833]);     // 1606 => [16833]
            map.insert(1729, &[2753]);     // 1729 => [2753]
            map.insert(1819, &[4801]);     // 1819 => [4801]
            map.insert(1837, &[3265]);     // 1837 => [3265]
            map.insert(1783, &[5313]);     // 1783 => [5313]
            map.insert(1857, &[2881]);     // 1857 => [2881]
            map.insert(1222, &[17217]);     // 1222 => [17217]
            map.insert(1911, &[5441]);     // 1911 => [5441]
            map.insert(1322, &[17729]);     // 1322 => [17729]
            map.insert(710, &[18753]);     // 710 => [18753]
            map.insert(796, &[20801]);     // 796 => [20801]
            map.insert(127, &[24897]);     // 127 => [24897]
            map.insert(1453, &[3649]);     // 1453 => [3649]
            map.insert(1143, &[5697]);     // 1143 => [5697]
            map.insert(923, &[6721]);     // 923 => [6721]
            map.insert(248, &[10817]);     // 248 => [10817]
            map.insert(454, &[19009]);     // 454 => [19009]
            map.insert(631, &[7233]);     // 631 => [7233]
            map.insert(206, &[13377]);     // 206 => [13377]
            map.insert(496, &[21569]);     // 496 => [21569]
            map.insert(1627, &[4993]);     // 1627 => [4993]
            map.insert(1336, &[9089]);     // 1336 => [9089]
            map.insert(1645, &[3457]);     // 1645 => [3457]
            map.insert(1236, &[9601]);     // 1236 => [9601]
            map.insert(824, &[10625]);     // 824 => [10625]
            map.insert(738, &[12673]);     // 738 => [12673]
            map.insert(191, &[24961]);     // 191 => [24961]
            map.insert(1389, &[3713]);     // 1389 => [3713]
            map.insert(1207, &[5761]);     // 1207 => [5761]
            map.insert(859, &[6785]);     // 859 => [6785]
            map.insert(482, &[12929]);     // 482 => [12929]
            map.insert(220, &[21121]);     // 220 => [21121]
            map.insert(695, &[7297]);     // 695 => [7297]
            map.insert(468, &[11393]);     // 468 => [11393]
            map.insert(234, &[19585]);     // 234 => [19585]
            map.insert(1054, &[2078]);     // 1054 => [2078]
            map.insert(558, &[558]);     // 558 => [558]
            map.insert(334, &[334]);     // 334 => [334]
            map.insert(118, &[118]);     // 118 => [118]
            map.insert(182, &[182]);     // 182 => [182]
            map.insert(214, &[214]);     // 214 => [214]
            map.insert(1228, &[4374]);     // 1228 => [4374]
            map.insert(1199, &[8726]);     // 1199 => [8726]
            map.insert(1149, &[17430]);     // 1149 => [17430]
            map.insert(230, &[230]);     // 230 => [230]
            map.insert(714, &[1318]);     // 714 => [1318]
            map.insert(671, &[10278]);     // 671 => [10278]
            map.insert(635, &[20518]);     // 635 => [20518]
            map.insert(426, &[1606]);     // 426 => [1606]
            map.insert(412, &[6214]);     // 412 => [6214]
            map.insert(376, &[24646]);     // 376 => [24646]
            map.insert(1504, &[4154]);     // 1504 => [4154]
            map.insert(1763, &[8282]);     // 1763 => [8282]
            map.insert(1821, &[16538]);     // 1821 => [16538]
            map.insert(794, &[794]);     // 794 => [794]
            map.insert(758, &[1306]);     // 758 => [1306]
            map.insert(502, &[1562]);     // 502 => [1562]
            map.insert(947, &[10506]);     // 947 => [10506]
            map.insert(855, &[20746]);     // 855 => [20746]
            map.insert(976, &[6666]);     // 976 => [6666]
            map.insert(820, &[25098]);     // 820 => [25098]
            map.insert(242, &[242]);     // 242 => [242]
            map.insert(1330, &[2354]);     // 1330 => [2354]
            map.insert(1461, &[16946]);     // 1461 => [16946]
            map.insert(1383, &[9266]);     // 1383 => [9266]
            map.insert(1749, &[16722]);     // 1749 => [16722]
            map.insert(1618, &[2642]);     // 1618 => [2642]
            map.insert(1636, &[5202]);     // 1636 => [5202]
            map.insert(1835, &[8594]);     // 1835 => [8594]
            map.insert(1864, &[4754]);     // 1864 => [4754]
            map.insert(1918, &[3218]);     // 1918 => [3218]
            map.insert(254, &[1810]);     // 254 => [1810]
            map.insert(1905, &[14354]);     // 1905 => [14354]
            map.insert(1615, &[22546]);     // 1615 => [22546]
            map.insert(1324, &[26642]);     // 1324 => [26642]
            map.insert(1270, &[28690]);     // 1270 => [28690]
            map.insert(244, &[244]);     // 244 => [244]
            map.insert(1055, &[2079]);     // 1055 => [2079]
            map.insert(559, &[559]);     // 559 => [559]
            map.insert(335, &[335]);     // 335 => [335]
            map.insert(119, &[119]);     // 119 => [119]
            map.insert(183, &[183]);     // 183 => [183]
            map.insert(215, &[215]);     // 215 => [215]
            map.insert(1229, &[4375]);     // 1229 => [4375]
            map.insert(1198, &[8727]);     // 1198 => [8727]
            map.insert(1148, &[17431]);     // 1148 => [17431]
            map.insert(231, &[231]);     // 231 => [231]
            map.insert(715, &[1319]);     // 715 => [1319]
            map.insert(670, &[10279]);     // 670 => [10279]
            map.insert(634, &[20519]);     // 634 => [20519]
            map.insert(427, &[1607]);     // 427 => [1607]
            map.insert(413, &[6215]);     // 413 => [6215]
            map.insert(377, &[24647]);     // 377 => [24647]
            map.insert(1505, &[4155]);     // 1505 => [4155]
            map.insert(1762, &[8283]);     // 1762 => [8283]
            map.insert(1820, &[16539]);     // 1820 => [16539]
            map.insert(795, &[795]);     // 795 => [795]
            map.insert(759, &[1307]);     // 759 => [1307]
            map.insert(503, &[1563]);     // 503 => [1563]
            map.insert(946, &[10507]);     // 946 => [10507]
            map.insert(854, &[20747]);     // 854 => [20747]
            map.insert(977, &[6667]);     // 977 => [6667]
            map.insert(821, &[25099]);     // 821 => [25099]
            map.insert(243, &[243]);     // 243 => [243]
            map.insert(1331, &[2355]);     // 1331 => [2355]
            map.insert(1460, &[16947]);     // 1460 => [16947]
            map.insert(1382, &[9267]);     // 1382 => [9267]
            map.insert(1748, &[16723]);     // 1748 => [16723]
            map.insert(1619, &[2643]);     // 1619 => [2643]
            map.insert(1637, &[5203]);     // 1637 => [5203]
            map.insert(1834, &[8595]);     // 1834 => [8595]
            map.insert(1865, &[4755]);     // 1865 => [4755]
            map.insert(1919, &[3219]);     // 1919 => [3219]
            map.insert(255, &[1811]);     // 255 => [1811]
            map.insert(1904, &[14355]);     // 1904 => [14355]
            map.insert(1614, &[22547]);     // 1614 => [22547]
            map.insert(1325, &[26643]);     // 1325 => [26643]
            map.insert(1271, &[28691]);     // 1271 => [28691]
            map.insert(245, &[245]);     // 245 => [245]
            map.insert(246, &[246]);     // 246 => [246]
            map.insert(247, &[247]);     // 247 => [247]
            
            SYNDROME_MAP = Box::into_raw(map);
        }
    });
}

impl GuavaCode15_4 {
    fn parity_check_matrix_transposed(&self) -> &BinMatrix {
        init();
        unsafe {
            PARITY_MATRIX_T.as_ref().unwrap()
        }
    }
}

impl BinaryCode for GuavaCode15_4 {
    fn name(&self) -> String {
        "[15, 4] Guava code".to_owned()
    }

    fn length(&self) -> usize {
        15
    }

    fn dimension(&self) -> usize {
        4
    }

    fn generator_matrix(&self) -> &BinMatrix {
        init();
        unsafe {
            GENERATOR_MATRIX.as_ref().unwrap()
        }
    }

    fn parity_check_matrix(&self) -> &BinMatrix {
        init();
        unsafe {
            PARITY_MATRIX.as_ref().unwrap()
        }
    }

    fn decode_to_code(&self, c: &BinVector) -> Result<BinVector, &str> {
        init();
        let map = unsafe {
            SYNDROME_MAP.as_ref().unwrap()
        };
        debug_assert_eq!(c.len(), self.length(), "the length doesn't match the expected length (length of the code)");
        let he = c * self.parity_check_matrix_transposed();
        let mut error = BinVector::with_capacity(15);
        let stor = unsafe { error.get_storage_mut() };
        let errbytes = map[&he.as_u64()];
        debug_assert_eq!(errbytes.len(), 15 / 64 + if 15 % 64 != 0 { 1 } else { 0 });
        stor.clear();
        stor.extend_from_slice(&errbytes[..]);
        unsafe { error.set_len(15) };
        debug_assert_eq!(error.len(), self.length(), "internal: the error vector is of the wrong length");
        let result = c + &error;
        debug_assert_eq!(result.len(), self.length(), "internal: the result vector is of the wrong length");
        debug_assert_eq!((&result * self.parity_check_matrix_transposed()).count_ones(), 0);
        Ok(result)
    }

    fn decode_to_message(&self, c: &BinVector) -> Result<BinVector, &str> {
        
        let mut codeword = self.decode_to_code(c)?;
        codeword.truncate(4);
        Ok(codeword)
        
    }

    fn decode_slice(&self, c: &mut [u64]) {
        init();
        
        debug_assert_eq!(c[15 / 64] & !((1 << 15) - 1), 0, "this message has excess bits");

        let map = unsafe {
            SYNDROME_MAP.as_ref().unwrap()
        };
        let he = &BinMatrix::from_slices(&[&c[..]], self.length()) * self.parity_check_matrix_transposed();
        let error = map[unsafe { &he.get_word_unchecked(0, 0) }];
        c.iter_mut().zip(error.iter().copied()).for_each(|(sample, error)| *sample ^= error as u64);
    }

    
}

#[cfg(test)]
mod tests {
    use super::*;
    use m4ri_rust::friendly::BinVector;
    use crate::oracle::Sample;

    #[test]
    fn size() {
        let code = GuavaCode15_4.generator_matrix();
        assert_eq!(code.ncols(), 15);
        assert_eq!(code.nrows(), 4);
    }

    #[test]
    fn test_decode_sample() {
        let code = GuavaCode15_4;
        for _ in 0..1000 {
            // setup
            let vec = BinVector::random(code.length());
            let mut sample_a = Sample::from_binvector(&vec, false);
            let mut sample_b = Sample::from_binvector(&vec, true);
            
            let decoded_vec = code.decode_to_message(&vec).unwrap();
            println!("decoded_vec: {:?}", decoded_vec);

            // test vectors
            let decoded_vec_sample_a = Sample::from_binvector(&decoded_vec, false);
            let decoded_vec_sample_b = Sample::from_binvector(&decoded_vec, true);

            code.decode_sample(&mut sample_a);
            code.decode_sample(&mut sample_b);
            assert_eq!(sample_a.get_product(), false);
            assert_eq!(sample_b.get_product(), true);
            assert_eq!(sample_a, decoded_vec_sample_a);
            assert_eq!(sample_b, decoded_vec_sample_b);
        }
    }

    #[test]
    fn random_decode_tests() {

        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[true, false, true, true, true, false, true, false, false, false, false, false, false, true, false]);
            let codeword = BinVector::from_bools(&[true, false, true, false, true, false, true, false, true, false, true, true, false, true, false]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[false, true, true, true, false, true, true, false, true, true, false, true, false, false, false]);
            let codeword = BinVector::from_bools(&[false, false, true, true, false, true, true, true, true, true, true, false, false, false, false]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[false, false, true, true, true, false, true, true, true, true, false, false, true, true, true]);
            let codeword = BinVector::from_bools(&[true, false, true, true, true, false, true, false, false, true, false, false, true, false, true]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[true, false, true, true, true, false, true, true, true, true, false, true, true, false, true]);
            let codeword = BinVector::from_bools(&[true, false, true, true, true, false, true, false, false, true, false, false, true, false, true]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[true, false, true, false, true, false, false, false, false, false, true, true, true, true, true]);
            let codeword = BinVector::from_bools(&[true, false, true, false, true, false, true, false, true, false, true, true, false, true, false]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[false, true, false, false, true, false, false, false, true, false, true, false, true, true, true]);
            let codeword = BinVector::from_bools(&[true, false, false, false, true, true, false, true, true, false, true, false, true, false, true]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[true, true, false, false, true, false, true, false, false, false, false, true, true, false, true]);
            let codeword = BinVector::from_bools(&[false, true, false, true, true, false, true, true, true, false, false, true, true, false, false]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[false, true, false, true, false, true, true, false, false, false, true, true, true, true, false]);
            let codeword = BinVector::from_bools(&[true, true, false, true, false, true, true, false, false, false, true, true, false, false, true]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[true, false, false, true, false, false, false, true, false, true, true, false, false, false, false]);
            let codeword = BinVector::from_bools(&[false, false, true, true, false, true, true, true, true, true, true, false, false, false, false]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[false, false, true, true, false, false, true, true, false, true, true, false, true, false, true]);
            let codeword = BinVector::from_bools(&[true, false, true, true, true, false, true, false, false, true, false, false, true, false, true]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[false, true, true, false, false, false, false, false, true, false, false, true, false, false, false]);
            let codeword = BinVector::from_bools(&[true, true, true, false, false, false, false, true, true, true, false, true, false, false, true]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[true, true, false, true, true, true, false, true, false, true, false, true, false, false, true]);
            let codeword = BinVector::from_bools(&[true, false, false, true, true, true, false, true, false, true, false, true, false, true, false]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[false, true, true, false, false, true, true, true, false, false, true, true, true, false, false]);
            let codeword = BinVector::from_bools(&[false, false, true, false, false, true, true, true, false, false, false, true, true, true, true]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[true, false, false, false, false, false, true, true, false, true, false, true, false, false, false]);
            let codeword = BinVector::from_bools(&[false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[false, true, false, true, false, false, false, true, true, false, true, false, true, true, false]);
            let codeword = BinVector::from_bools(&[true, true, true, true, false, false, false, true, false, false, true, false, true, true, false]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[true, false, true, false, true, true, false, true, true, false, false, false, false, true, true]);
            let codeword = BinVector::from_bools(&[false, true, true, true, true, true, false, false, true, false, false, false, false, true, true]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[true, false, true, true, true, false, true, true, true, false, true, false, true, true, true]);
            let codeword = BinVector::from_bools(&[true, true, true, true, false, false, false, true, false, false, true, false, true, true, false]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[false, false, true, false, false, false, false, false, true, false, false, true, true, true, true]);
            let codeword = BinVector::from_bools(&[false, false, false, true, false, false, false, false, true, true, true, true, true, true, true]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[false, false, true, false, true, false, false, true, true, false, true, false, true, false, false]);
            let codeword = BinVector::from_bools(&[true, false, false, false, true, true, false, true, true, false, true, false, true, false, true]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
        {
            let code = GuavaCode15_4;
            let randvec = BinVector::from_bools(&[true, true, true, false, false, false, true, true, true, false, true, false, true, true, true]);
            let codeword = BinVector::from_bools(&[true, true, true, true, false, false, false, true, false, false, true, false, true, true, false]);
            assert_eq!(code.decode_to_code(&randvec), Ok(codeword));
        }
        
    }

    #[test]
    fn test_generator_representation() {
        init();
        let generator_matrix = unsafe { GENERATOR_MATRIX.as_ref().unwrap() };
        let first_row = generator_matrix.get_window(0, 0, 1, generator_matrix.ncols());
        let vector = BinVector::from_bools(&[ true, false, false, false, true, true, false, true, true, false, true, false, true, false, true ]);
        assert_eq!(vector, first_row.as_vector());
    }

}
